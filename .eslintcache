[{"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\index.js":"1","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\App.js":"2","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\ApolloProvider.js":"3","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\History\\history.js":"4","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Context\\Auth.js":"5","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Navigation\\Sidebar.js":"6","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Router\\routes.js":"7","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Error\\Pagenotfound.js":"8","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Error\\commingSoon.js":"9","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\Device_register.js":"10","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\test.js":"11","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Mutations\\index.js":"12","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\show_device_list.js":"13","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\emptyDevice.js":"14","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\rightbar.js":"15","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\widgets.js":"16","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\GoBack.js":"17","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Empty_pages\\empty.js":"18","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteModal.js":"19","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\dashboardNAme.js":"20","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Queries\\index.js":"21","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Subscriptions\\index.js":"22","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\SensorPowerComponent.js":"23","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Rules\\Rules.js":"24","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\DeviceInfo.js":"25","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\ComponentList.js":"26","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\godaddy.js":"27","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Rules\\CreateRule.js":"28","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\formFields.js":"29","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteRule.js":"30","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteCondition.js":"31","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\ViewDetailsWidget.js":"32","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\EditModalWidget.js":"33","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\BooleanComp.js":"34","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\Text.js":"35","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\Charts.js":"36","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\PieChart\\PieChart.js":"37","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\BarChart\\BarChart.js":"38","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\LineChart\\LineChart.js":"39","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\PieChart\\PieSliceComponent.js":"40","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\GaugeChart\\GaugeChart.js":"41","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\test2.js":"42","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\ComponentTest.js":"43","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\tabHours.js":"44","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Styles\\Styles.js":"45","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\DashboardBar.js":"46","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Files\\DeleteData.js":"47","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Context\\loadingContextSensorpower.js":"48","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\testDashvbooard.js":"49","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\DocumentSite.js":"50","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Loader\\Loader.js":"51","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\BarChart\\testBar.js":"52"},{"size":1219,"mtime":1625460411221,"results":"53","hashOfConfig":"54"},{"size":996,"mtime":1623839890587,"results":"55","hashOfConfig":"54"},{"size":2951,"mtime":1623993908392,"results":"56","hashOfConfig":"54"},{"size":107,"mtime":1600086673703,"results":"57","hashOfConfig":"54"},{"size":805,"mtime":1622109994282,"results":"58","hashOfConfig":"54"},{"size":2688,"mtime":1621944513869,"results":"59","hashOfConfig":"54"},{"size":1386,"mtime":1621944527907,"results":"60","hashOfConfig":"54"},{"size":473,"mtime":1600678583970,"results":"61","hashOfConfig":"54"},{"size":457,"mtime":1600678668664,"results":"62","hashOfConfig":"54"},{"size":9682,"mtime":1624422279984,"results":"63","hashOfConfig":"54"},{"size":1557,"mtime":1623904936023,"results":"64","hashOfConfig":"54"},{"size":4544,"mtime":1621409686159,"results":"65","hashOfConfig":"54"},{"size":565,"mtime":1619520010273,"results":"66","hashOfConfig":"54"},{"size":519,"mtime":1621939962540,"results":"67","hashOfConfig":"54"},{"size":3031,"mtime":1620312243786,"results":"68","hashOfConfig":"54"},{"size":11003,"mtime":1625462423640,"results":"69","hashOfConfig":"54"},{"size":251,"mtime":1619091753311,"results":"70","hashOfConfig":"54"},{"size":657,"mtime":1621939723008,"results":"71","hashOfConfig":"54"},{"size":1872,"mtime":1624422279993,"results":"72","hashOfConfig":"54"},{"size":2160,"mtime":1624422279998,"results":"73","hashOfConfig":"54"},{"size":3448,"mtime":1619499848143,"results":"74","hashOfConfig":"54"},{"size":771,"mtime":1619779091618,"results":"75","hashOfConfig":"54"},{"size":16151,"mtime":1613543153385,"results":"76","hashOfConfig":"54"},{"size":3195,"mtime":1622011974772,"results":"77","hashOfConfig":"54"},{"size":951,"mtime":1621829564385,"results":"78","hashOfConfig":"54"},{"size":5448,"mtime":1621829564384,"results":"79","hashOfConfig":"54"},{"size":130,"mtime":1608274469010,"results":"80","hashOfConfig":"54"},{"size":10473,"mtime":1622011974771,"results":"81","hashOfConfig":"54"},{"size":18893,"mtime":1621522354365,"results":"82","hashOfConfig":"54"},{"size":1252,"mtime":1624422279995,"results":"83","hashOfConfig":"54"},{"size":1267,"mtime":1624422279992,"results":"84","hashOfConfig":"54"},{"size":1422,"mtime":1624422279997,"results":"85","hashOfConfig":"54"},{"size":4197,"mtime":1624422279996,"results":"86","hashOfConfig":"54"},{"size":5095,"mtime":1620199325847,"results":"87","hashOfConfig":"54"},{"size":2900,"mtime":1620122424566,"results":"88","hashOfConfig":"54"},{"size":3386,"mtime":1624424785087,"results":"89","hashOfConfig":"54"},{"size":3636,"mtime":1624422280008,"results":"90","hashOfConfig":"54"},{"size":10578,"mtime":1624424800767,"results":"91","hashOfConfig":"54"},{"size":8670,"mtime":1624422280006,"results":"92","hashOfConfig":"54"},{"size":7739,"mtime":1624422280009,"results":"93","hashOfConfig":"54"},{"size":8972,"mtime":1624422280005,"results":"94","hashOfConfig":"54"},{"size":3709,"mtime":1623993613586,"results":"95","hashOfConfig":"54"},{"size":159,"mtime":1614682978485,"results":"96","hashOfConfig":"54"},{"size":435,"mtime":1621452134401,"results":"97","hashOfConfig":"54"},{"size":1373,"mtime":1622089634445,"results":"98","hashOfConfig":"54"},{"size":35175,"mtime":1624424334355,"results":"99","hashOfConfig":"54"},{"size":958,"mtime":1619177982015,"results":"100","hashOfConfig":"54"},{"size":1719,"mtime":1619678570634,"results":"101","hashOfConfig":"54"},{"size":246,"mtime":1620205025156,"results":"102","hashOfConfig":"54"},{"size":404,"mtime":1622434541157,"results":"103","hashOfConfig":"54"},{"size":287,"mtime":1622013253166,"results":"104","hashOfConfig":"54"},{"size":5073,"mtime":1625462581902,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ovprve",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\index.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\App.js",[],["222","223"],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\ApolloProvider.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\History\\history.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Context\\Auth.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Navigation\\Sidebar.js",["224","225","226","227"],"/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { Nav } from 'react-bootstrap';\r\nimport logo from '../../Images/wiznet_logo.png';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport Auth from '../../Context/Auth';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { ADDUSER } from '../../Mutations';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport '../../Styles/sidebar.css';\r\n\r\nfunction Sidebar() {\r\n\tconst auth = new Auth();\r\n\tconst [hover_icon, sethover_icon] = useState(null);\r\n\tconst [ADD_USER] = useMutation(ADDUSER);\r\n\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t\tADD_USER();\r\n\t\t} catch (err) {\r\n\t\t\t//console.log(err);\r\n\t\t}\r\n\t\treturn () => {};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst Logout_fun = () => {\r\n\t\tlocalStorage.removeItem('active_tab');\r\n\t\tauth.logout();\r\n\t};\r\n\tconst mouse_enter = (name) => {\r\n\t\tsethover_icon(name);\r\n\t};\r\n\tconst imageclick = () => {\r\n\t\twindow.location.href = '/dashboard';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"sidenav\">\r\n\t\t\t\t<div className=\" text-center\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\talt=\"company_logo\"\r\n\t\t\t\t\t\tclassName=\"logo mb-5\"\r\n\t\t\t\t\t\tonClick={imageclick}></img>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\" text-center \">\r\n\t\t\t\t\t<Nav className=\"mr-auto \">\r\n\t\t\t\t\t\t<div className=\" side-icon-center text-center\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item \">\r\n\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\tclassName=\"nav-link \"\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\tto=\"/dashboard\">\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ri-dashboard-line ri-lg sidebar-icon \"\r\n\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => mouse_enter('Dashboard')}></i>\r\n\t\t\t\t\t\t\t\t\t<div className=\"icon_device fs-8\">Dashboard</div>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li className=\"nav-item \">\r\n\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\t\tto=\"/device\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"ri-router-line ri-lg sidebar-icon \"></i>\r\n\t\t\t\t\t\t\t\t\t<div className=\"fs-8\">Device | Rule</div>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item \">\r\n\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\t\t\tto=\"/docs\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"ri-file-text-fill ri-lg\"></i>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"fs-8\">Documents</div>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Nav>\r\n\r\n\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t<span className=\"logout_container\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\" onClick={Logout_fun}>\r\n\t\t\t\t\t\t\t\t<i className=\"ri-logout-circle-line ri-lg\"></i>\r\n\t\t\t\t\t\t\t\t<div className=\"fs-8\">Logout</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Router\\routes.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Error\\Pagenotfound.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Error\\commingSoon.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\Device_register.js",["228"],"/** @format */\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useMutation, useQuery, useSubscription } from '@apollo/react-hooks';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { REGISTERDEVICE } from '../../Mutations';\r\nimport { GETDEVICES } from '../../Queries';\r\nimport { DEVICEWSDATA } from '../../Subscriptions';\r\nimport { toast } from 'react-toastify';\r\nimport DeviceList from '../../Components/Device/show_device_list';\r\nimport Empty from '../../Components/Device/emptyDevice';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Select from 'react-select';\r\nimport countryList from 'react-select-country-list';\r\n\r\nimport decodeJWT from 'jwt-decode';\r\n\r\nimport '../../Styles/device.css';\r\nimport '../../Styles/RuleSetting.css';\r\nimport styles from '../../Styles/Styles.js';\r\nimport Loaders from '../../Components/Loader/Loader';\r\n\r\nfunction Device_register(props) {\r\n\tlet history = useHistory();\r\n\tlet token = localStorage.getItem('btoken');\r\n\tlet email_id;\r\n\tif (token) {\r\n\t\tconst decoded = decodeJWT(token);\r\n\t\temail_id = decoded.emails;\r\n\t}\r\n\t//console.log(email_id);\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst [valueCountry, setCountryValue] = useState();\r\n\tconst options = useMemo(() => countryList().getData(), []);\r\n\r\n\tconst [searchStatus, setSearchState] = useState('');\r\n\tconst [show, setshow] = useState(false);\r\n\tconst [showDevice, setshowDevice] = useState(false);\r\n\tconst [circleloading, setcircleloading] = useState(false);\r\n\tconst [disabled, setdisabled] = useState(false);\r\n\tconst { register, handleSubmit, errors, control } = useForm();\r\n\tconst { loading, data: dta } = useQuery(GETDEVICES);\r\n\t// const [show_twin_modal, setshow_twin_modal] = useState(false);\r\n\t// const [twinClickedData, settwinClickedData] = useState(null);\r\n\tconst [deviceList, setdeviceList] = useState(null);\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { data: deviceSubsData, error: deviceSubsError } = useSubscription(\r\n\t\tDEVICEWSDATA,\r\n\t\t{\r\n\t\t\tvariables: { topic: { topic: 'isDeviceActivated/' + email_id[0] } },\r\n\t\t}\r\n\t);\r\n\r\n\tconst [Regoseter_device] = useMutation(REGISTERDEVICE, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: GETDEVICES,\r\n\t\t\t});\r\n\r\n\t\t\tdata.get_user_devices = [\r\n\t\t\t\tresult.data.register_user_device,\r\n\t\t\t\t...data.get_user_devices,\r\n\t\t\t];\r\n\r\n\t\t\tproxy.writeQuery({ query: GETDEVICES, data });\r\n\t\t\tsetdeviceList(data.get_user_devices);\r\n\r\n\t\t\ttoast.success(result.data.register_user_device, {\r\n\t\t\t\tposition: 'top-right',\r\n\t\t\t\tautoClose: 3000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t});\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetshow(false);\r\n\t\t},\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dta !== undefined && dta.get_user_devices.length > 0) {\r\n\t\t\tsetshowDevice(true);\r\n\t\t\tsetdeviceList(dta.get_user_devices);\r\n\t\t}\r\n\t\treturn () => {};\r\n\t}, [dta]);\r\n\r\n\tif (deviceSubsData && deviceSubsData.deviceSubsData !== null) {\r\n\t\tdta &&\r\n\t\t\tdta.get_user_devices.forEach((li) => {\r\n\t\t\t\tif (li.mac_address === deviceSubsData.isDeviceActivated?.device_name) {\r\n\t\t\t\t\tli.is_activated = deviceSubsData.isDeviceActivated?.is_activated;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\t// return <div class=\"loading-container\">\r\n\t\t// \t<div class=\"loading\"></div>\r\n\t\t// \t<div id=\"loading-text\" className=\"text-primary font-weight-bolder\">loading</div>\r\n\t\t// </div>;\r\n\t\treturn <Loaders />;\r\n\t}\r\n\r\n\tconst Register_device_btn = () => {\r\n\t\tsetshow(true);\r\n\t};\r\n\tconst cancel = () => {\r\n\t\tsetshow(false);\r\n\t\tif (deviceList !== null && deviceList.length > 0) {\r\n\t\t\tsetshowDevice(true);\r\n\t\t} else {\r\n\t\t\tsetshowDevice(false);\r\n\t\t}\r\n\t};\r\n\tconst Register_device = async (e) => {\r\n\t\tsetcircleloading(true);\r\n\t\tsetdisabled(true);\r\n\r\n\t\ttry {\r\n\t\t\tawait Regoseter_device({ variables: { input: e } });\r\n\t\t} catch (err) {\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetshow(true);\r\n\r\n\t\t\tif (deviceList !== null) {\r\n\t\t\t\tsetshowDevice(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetshowDevice(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst search_trigger = (e) => {\r\n\t\tsetSearchState(e.target.value);\r\n\t};\r\n\r\n\tconst devices = deviceList?.filter((item) => {\r\n\t\treturn (\r\n\t\t\titem.mac_address.toLowerCase().includes(searchStatus.toLowerCase()) ||\r\n\t\t\t!searchStatus\r\n\t\t);\r\n\t});\r\n\r\n\tconst Register_device_ = () => {\r\n\t\tsetshowDevice(true);\r\n\t\tsetshow(true);\r\n\t};\r\n\r\n\tconst DeviceSettingClick = (item) => {\r\n\t\tlocalStorage.setItem('mac_address', item.mac_address);\r\n\t\thistory.push(`/device/${item.mac_address}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{dta && dta.get_user_devices.length <= 0 && showDevice === false && (\r\n\t\t\t\t<Empty Register_device_={Register_device_} />\r\n\t\t\t)}\r\n\r\n\t\t\t{showDevice && dta.get_user_devices.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"row dashboard_menu_container \">\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-sm-3 col-md-3 col-lg-3 col-xl-3 text-white fs-1 mb-4 mt-4 ml-4\">\r\n\t\t\t\t\t\t\t\tDevice & Rule\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group col-12 col-sm-3 col-md-3 col-lg-3 col-xl-3 mb-4 mt-4  input-icons\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search MAC Address\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={search_trigger}></input>\r\n\t\t\t\t\t\t\t\t<span class=\"fa fa-search \"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-sm-1 col-md-1 col-lg-1 col-xl-1 mb-4 mt-4\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn plus \" onClick={Register_device_btn}>\r\n\t\t\t\t\t\t\t\t\t<i class=\"ri-add-line add\"></i>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"row no-gutters device_box\">\r\n\t\t\t\t\t\t\t{devices?.length > 0 ? (\r\n\t\t\t\t\t\t\t\tdevices.map((li, index) => (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-group col-12 col-sm-12 col-md-4 col-lg-3 col-xl-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\tli.is_activated\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'col-11 col-sm-11 col-md-11 col-lg-11 col-xl-11 device_container pl-2 pr-3 py-3'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'col-11 col-sm-11 col-md-11 col-lg-11 col-xl-11 device_container_notactive pl-2 pr-3 py-3'\r\n\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeviceList\r\n\t\t\t\t\t\t\t\t\t\t\t\tli={li}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tDeviceSettingClick={DeviceSettingClick}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"fs-3 ml-3\">\r\n\t\t\t\t\t\t\t\t\tSearch results not found for\r\n\t\t\t\t\t\t\t\t\t<span className=\"ml-3 font-weight-bold\">\r\n\t\t\t\t\t\t\t\t\t\t\" {searchStatus} \"\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tshow={show}\r\n\t\t\t\tdialogClassName=\"device_modal_class\"\r\n\t\t\t\tonHide={cancel}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={true}>\r\n\t\t\t\t<div className=\"container_modal\">\r\n\t\t\t\t\t<div className=\"d-flex mb-2\">\r\n\t\t\t\t\t\t<span className=\"fs-4 text-primary\">Device register</span>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"ri-close-line ri-lg ml-auto fs-4\"\r\n\t\t\t\t\t\t\tonClick={cancel}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form onSubmit={handleSubmit(Register_device)}>\r\n\t\t\t\t\t\t<label className=\"label\" htmlFor=\"mac_address\">\r\n\t\t\t\t\t\t\tMAC Address\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"mac_address\"\r\n\t\t\t\t\t\t\t\tid=\"mac_address\"\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\terrors.mac_address\r\n\t\t\t\t\t\t\t\t\t\t? 'form-control error_input '\r\n\t\t\t\t\t\t\t\t\t\t: 'form-control '\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"MAC Address\"\r\n\t\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\t\trequired: 'MAC Address is required',\r\n\t\t\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\t\t\tvalue: /^[0-9a-f]{1,2}([\\\\.:-])(?:[0-9a-f]{1,2}\\1){4}[0-9a-f]{1,2}$/,\r\n\t\t\t\t\t\t\t\t\t\tmessage: 'invalid MAC address',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{errors.mac_address && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\t{errors.mac_address.message}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"deviceLocation\">\r\n\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t<Controller\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\tas={Select}\r\n\t\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\tvalue={valueCountry}\r\n\t\t\t\t\t\t\t\tcontrol={control}\r\n\t\t\t\t\t\t\t\trules={{ required: true }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{errors.country && errors.country.type === 'required' ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-error\">Please select a country</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"deviceLocation\">\r\n\t\t\t\t\t\t\t\tSite location\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"deviceLocation\"\r\n\t\t\t\t\t\t\t\tid=\"deviceLocation\"\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\terrors.deviceLocation\r\n\t\t\t\t\t\t\t\t\t\t? 'form-control error_input  text-capitalize'\r\n\t\t\t\t\t\t\t\t\t\t: 'form-control  text-capitalize'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Location\"\r\n\t\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\t\trequired: 'Location is required',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{errors.deviceLocation && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\t{errors.deviceLocation.message}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mt-4\" align=\"right\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t\t\t\tonClick={cancel}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" disabled={disabled}>\r\n\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t{circleloading === true && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right mt-3\"></span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Device_register;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\test.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Mutations\\index.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\show_device_list.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Device\\emptyDevice.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\rightbar.js",["229","230"],"import React, { useState } from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport '../../Styles/right_sidebar.css';\r\nlet widget_data = [\r\n\t{ name: 'Bar chart', icon: 'ri-bar-chart-line', chart: 'ColumnChart' },\r\n\t{ name: 'Line chart', icon: 'ri-line-chart-line', chart: 'LineChart' },\r\n\t{ name: 'Pie chart', icon: 'ri-pie-chart-line', chart: 'PieChart' },\r\n\t{ name: 'Gauge Chart', icon: 'ri-dashboard-2-line', chart: 'GaugeChart' },\r\n];\r\n\r\nfunction Rightbar(props) {\r\n\tconst [hover_icon, sethover_icon] = useState(null);\r\n\tconst [openRightBar, setopenRightBar] = useState(false);\r\n\r\n\tconst renderTooltip = (props) => (\r\n\t\t<Tooltip id=\"toolTipRightBar\" {...props}>\r\n\t\t\t{hover_icon}\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\r\n\tconst handleRightBar = () => {\r\n\t\tsetopenRightBar(!openRightBar);\r\n\t};\r\n\r\n\tconst mouse_enter = (val) => {\r\n\t\tsethover_icon(val);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"common_widgets_containerCancel mt-4 mb-2\" align=\"center\">\r\n\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\tplacement=\"left\"\r\n\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\topenRightBar === false\r\n\t\t\t\t\t\t\t\t? 'ri-add-line circle-iconCancel'\r\n\t\t\t\t\t\t\t\t: 'ri-close-line circle-iconCancel'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonMouseEnter={() =>\r\n\t\t\t\t\t\t\tmouse_enter(openRightBar === false ? 'Create widget' : 'Close')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClick={handleRightBar}></i>\r\n\t\t\t\t</OverlayTrigger>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName={openRightBar === false ? \"hidden\" : \"right_sidebar\"}\r\n\t\t\t\talign=\"center\">\r\n\t\t\t\t{widget_data.map((li, index) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mt-2 common_widgets_container \"\r\n\t\t\t\t\t\tkey={index}>\r\n\t\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\t\tplacement=\"left\"\r\n\t\t\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName={li.icon + ' circle-icon'}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => mouse_enter(li.name)}\r\n\r\n\t\t\t\t\t\t\t\tonClick={() => props.createWidget(li.chart, li.name)}></i>\r\n\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<hr className=\"widgets_hr\"></hr>\r\n\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 common_widgets_container\">\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\tplacement=\"left\"\r\n\t\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"ri-edit-circle-line circle-icon\"\r\n\t\t\t\t\t\t\tonMouseEnter={() => mouse_enter('Sensor power')}\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tprops.createWidget('SensorPower', 'Sensor power')\r\n\t\t\t\t\t\t\t}></i>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"widgets_hr\"></hr>\r\n\t\t\t\t{/*<div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mb-4 common_widgets_container\">\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\tplacement=\"left\"\r\n\t\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"ri-text icon_widgets\"\r\n\t\t\t\t\t\t\tonMouseEnter={() => mouse_enter('Text')}></i>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t\t</div>*/}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rightbar;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\widgets.js",["231","232","233","234"],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\GoBack.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Empty_pages\\empty.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteModal.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\dashboardNAme.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Queries\\index.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Subscriptions\\index.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\SensorPowerComponent.js",["235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\r\nimport { UPDATECOMPONENTS, DELETECOMPONENT } from '../../../Mutations';\r\nimport { DASHBOARDDATA, GETDEVICEDATASET } from '../../../Queries';\r\nimport { D2CMESSAGE } from '../../../Subscriptions';\r\nimport { Popover, Overlay } from 'react-bootstrap';\r\n\r\nimport BooleanComp from './BooleanComp';\r\nimport TextComp from './Text';\r\n\r\nfunction SensorPowerComponent(props) {\r\n\t// // const [countText, setcountText] = useState();\r\n\t// // const [compDisabled, setcompDisabled] = useState(true);\r\n\t// // const [ind, setind] = useState(null);\r\n\t// // const [pusherData, setpusherData] = useState(null);\r\n\t// // const [deleteData, setdeleteData] = useState(null);\r\n\t// // const [circleCompDelete, setcircleCompDelete] = useState(false);\r\n\t// // const [compData, setcompData] = useState([]);\r\n\t// // const [responceVal, setresponceVal] = useState(undefined);\r\n\t// // const [responseType, setresponseType] = useState(undefined);\r\n\t// // const [target, setTarget] = useState(null);\r\n\t// // const [set_popover, set_popover_disabled] = useState(false);\r\n\t// // const [D2CMsg, setD2CMsg] = useState('');\r\n\t// // const [boleanCompDefaultVal, setboleanCompDefaultVal] = useState(null);\r\n\t// // const [circleLoading, setcircleLoading] = useState(false);\r\n\t// // const { register, handleSubmit, errors } = useForm();\r\n\t// // const { data: dataSubs, error: errorData } = useSubscription(D2CMESSAGE);\r\n\t// // const [test, settest] = useState(false);\r\n\t// // const [updateComponents] = useMutation(UPDATECOMPONENTS, {\r\n\t// // \tupdate(proxy, result) {\r\n\t// // \t\tlet data = proxy.readQuery({\r\n\t// // \t\t\tquery: DASHBOARDDATA,\r\n\t// // \t\t});\r\n\t// // \t\tdata.get_user_dahboard_data.map((exist, index) => {\r\n\t// // \t\t\tif (exist.dashboard_id === props.dashboard_id) {\r\n\t// // \t\t\t\texist.widget_data.map((widgetD, index) => {\r\n\t// // \t\t\t\t\tif (widgetD.widget_id === props.data.widget_id) {\r\n\t// // \t\t\t\t\t\twidgetD.sensor_power_data.map((li) => {\r\n\t// // \t\t\t\t\t\t\tif (\r\n\t// // \t\t\t\t\t\t\t\tli.component_id ===\r\n\t// // \t\t\t\t\t\t\t\tresult.data.update_user_components[0].component_id\r\n\t// // \t\t\t\t\t\t\t) {\r\n\t// // \t\t\t\t\t\t\t\tif (li.data_type === 'String') {\r\n\t// // \t\t\t\t\t\t\t\t\tli.init_value =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].init_value;\r\n\t// // \t\t\t\t\t\t\t\t\tli.updated_at =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].updated_at;\r\n\t// // \t\t\t\t\t\t\t\t\tli.response =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response;\r\n\t// // \t\t\t\t\t\t\t\t\tsetresponceVal(\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response\r\n\t// // \t\t\t\t\t\t\t\t\t);\r\n\t// // \t\t\t\t\t\t\t\t\tsetcircleLoading(false);\r\n\t// // \t\t\t\t\t\t\t\t\tsetind(null);\r\n\t// // \t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\tif (li.data_type === 'Boolean') {\r\n\t// // \t\t\t\t\t\t\t\t\tsetboleanCompDefaultVal(\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].init_value\r\n\t// // \t\t\t\t\t\t\t\t\t);\r\n\t// // \t\t\t\t\t\t\t\t\tli.init_value =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].init_value;\r\n\t// // \t\t\t\t\t\t\t\t\tli.updated_at =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].updated_at;\r\n\t// // \t\t\t\t\t\t\t\t\tli.response =\r\n\t// // \t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response;\r\n\t// // \t\t\t\t\t\t\t\t\tsetcompData((compData) =>\r\n\t// // \t\t\t\t\t\t\t\t\t\tcompData.map((li) => {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\tif (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\tli.component_id ===\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].component_id\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t) {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0]\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t.responseType === 'Success'\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t...li,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponse:\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponseType: 'text-success',\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0]\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t.responseType === 'connection_time_out'\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t...li,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponse:\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponseType: 'text-warning',\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0]\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t.responseType === 'method_time_out'\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t...li,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponse:\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tresult.data.update_user_components[0].response,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tresponseType: 'text-warning',\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\treturn li;\r\n\t// // \t\t\t\t\t\t\t\t\t\t})\r\n\t// // \t\t\t\t\t\t\t\t\t);\r\n\t// // \t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t});\r\n\t// // \t\t\t\t\t}\r\n\t// // \t\t\t\t});\r\n\t// // \t\t\t}\r\n\t// // \t\t});\r\n\t// // \t},\r\n\t// // });\r\n\t// // const [deleteComponent] = useMutation(DELETECOMPONENT, {\r\n\t// // \trefetchQueries: [\r\n\t// // \t\t{\r\n\t// // \t\t\tquery: GETDEVICEDATASET,\r\n\t// // \t\t},\r\n\t// // \t],\r\n\t// // \tupdate(proxy, result) {\r\n\t// // \t\tlet data = proxy.readQuery({\r\n\t// // \t\t\tquery: DASHBOARDDATA,\r\n\t// // \t\t});\r\n\t// // \t\tdata.get_user_dahboard_data.map((exist, index) => {\r\n\t// // \t\t\tif (exist.dashboard_id === props.dashboard_id) {\r\n\t// // \t\t\t\texist.widget_data.map((widgetD, index) => {\r\n\t// // \t\t\t\t\tif (widgetD.widget_id === props.data.widget_id) {\r\n\t// // \t\t\t\t\t\twidgetD.sensor_power_data.map((li) => {\r\n\t// // \t\t\t\t\t\t\tif (li.component_id === deleteData.component_id) {\r\n\t// // \t\t\t\t\t\t\t\tdelete li.component_id;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.component_name;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.data_type;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.in_out;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.init_value;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.updated_at;\r\n\t// // \t\t\t\t\t\t\t\tdelete li.__typename;\r\n\t// // \t\t\t\t\t\t\t\tsetcircleCompDelete(false);\r\n\t// // \t\t\t\t\t\t\t\tset_popover_disabled(!set_popover);\r\n\t// // \t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t});\r\n\t// // \t\t\t\t\t}\r\n\t// // \t\t\t\t});\r\n\t// // \t\t\t}\r\n\t// // \t\t});\r\n\t// // \t},\r\n\t// // });\r\n\t// // useEffect(() => {\r\n\t// // \tsetcompData(props.sensDta);\r\n\t// // }, [props]);\r\n\t// // useEffect(() => {\r\n\t// // \tif (dataSubs && dataSubs !== null) {\r\n\t// // \t\tsetcompData(\r\n\t// // \t\t\tcompData.map((li) => {\r\n\t// // \t\t\t\tif (li.component_id === dataSubs.d2cMessage.component_id) {\r\n\t// // \t\t\t\t\treturn {\r\n\t// // \t\t\t\t\t\t...li,\r\n\t// // \t\t\t\t\t\tinit_value: dataSubs.d2cMessage.init_value,\r\n\t// // \t\t\t\t\t\tupdated_at: dataSubs.d2cMessage.updated_at,\r\n\t// // \t\t\t\t\t};\r\n\t// // \t\t\t\t}\r\n\t// // \t\t\t\treturn li;\r\n\t// // \t\t\t})\r\n\t// // \t\t);\r\n\t// // \t} else {\r\n\t// // \t\tsetcompData(props.sensDta);\r\n\t// // \t}\r\n\t// // }, [dataSubs]);\r\n\t// // const editComponent = (ind) => {\r\n\t// // \tsetcompDisabled(false);\r\n\t// // \tsetind(ind);\r\n\t// // };\r\n\t// // const cancelClick = () => {\r\n\t// // \tsetcompDisabled(true);\r\n\t// // \tsetcircleLoading(false);\r\n\t// // \tsetind(null);\r\n\t// // };\r\n\t// // const triggerData = async (e) => {\r\n\t// // \te.comp_id = parseInt(e.comp_id);\r\n\t// // \te.device_id = parseInt(e.device_id);\r\n\t// // \tsetcircleLoading(true);\r\n\t// // \ttry {\r\n\t// // \t\tawait updateComponents({ variables: { input: e } });\r\n\t// // \t} catch (err) {\r\n\t// // \t\t//console.log(err);\r\n\t// // \t\tsetcircleLoading(false);\r\n\t// // \t\tsetind(null);\r\n\t// // \t}\r\n\t// // };\r\n\t// // const onChangeText = (e) => {\r\n\t// // \tsetcountText(e.target.value.length);\r\n\t// // };\r\n\t// // const booleanCompUpdate = async (e, data_type, comp_id) => {\r\n\t// // \tlet init_value = e.target.checked;\r\n\t// // \tlet device_id = props.data.device_id;\r\n\t// // \tlet finalData = {\r\n\t// // \t\tinit_value: init_value.toString(),\r\n\t// // \t\tdevice_id,\r\n\t// // \t\tdata_type,\r\n\t// // \t\tcomp_id,\r\n\t// // \t};\r\n\t// // \ttry {\r\n\t// // \t\tawait updateComponents({ variables: { input: finalData } });\r\n\t// // \t} catch (err) {\r\n\t// // \t\t//console.log(err);\r\n\t// // \t}\r\n\t// // };\r\n\t// // const deleteClick = (event, item) => {\r\n\t// // \tsetdeleteData(item);\r\n\t// // \tset_popover_disabled(!set_popover);\r\n\t// // \tsetTarget(event.target);\r\n\t// // };\r\n\t// // const cancel_ = () => {\r\n\t// // \tset_popover_disabled(!set_popover);\r\n\t// // };\r\n\t// // const delete_ = async (lt) => {\r\n\t// // \t//setcircleLoading(true);\r\n\t// // \tsetcircleCompDelete(true);\r\n\t// // \ttry {\r\n\t// // \t\tawait deleteComponent({\r\n\t// // \t\t\tvariables: {\r\n\t// // \t\t\t\tdashboard_id: props.dashboard_id,\r\n\t// // \t\t\t\twidget_id: props.data.widget_id,\r\n\t// // \t\t\t\tcomponent_id: deleteData.component_id,\r\n\t// // \t\t\t},\r\n\t// // \t\t});\r\n\t// // \t} catch (err) {\r\n\t// // \t\t//console.log(err);\r\n\t// // \t\tsetcircleCompDelete(false);\r\n\t// // \t\tsetcircleLoading(false);\r\n\t// // \t\tset_popover_disabled(!set_popover);\r\n\t// // \t}\r\n\t// // };\r\n\t// // return (\r\n\t// // \t<div>\r\n\t// // \t\t<Overlay\r\n\t// // \t\t\tshow={set_popover}\r\n\t// // \t\t\ttarget={target}\r\n\t// // \t\t\trootClose\r\n\t// // \t\t\tonHide={() => set_popover_disabled()}\r\n\t// // \t\t\tplacement=\"left\">\r\n\t// // \t\t\t<Popover id=\"popover_delete_component\">\r\n\t// // \t\t\t\t<div className=\"\">\r\n\t// // \t\t\t\t\t<div className=\"delete_mod_\">\r\n\t// // \t\t\t\t\t\tThis will remove the component from the current widget.\r\n\t// // \t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t<div className=\"delete_com_group_btn\">\r\n\t// // \t\t\t\t\t\t<span className=\"cancel_\" onClick={(e) => cancel_()}>\r\n\t// // \t\t\t\t\t\t\tCancel\r\n\t// // \t\t\t\t\t\t</span>\r\n\t// // \t\t\t\t\t\t{circleCompDelete && (\r\n\t// // \t\t\t\t\t\t\t<span className=\"spinner-border mt-1\"></span>\r\n\t// // \t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t{circleCompDelete === false && (\r\n\t// // \t\t\t\t\t\t\t<span className=\"delete_\" onClick={delete_}>\r\n\t// // \t\t\t\t\t\t\t\tDelete\r\n\t// // \t\t\t\t\t\t\t</span>\r\n\t// // \t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t</div>\r\n\t// // \t\t\t\t</div>\r\n\t// // \t\t\t</Popover>\r\n\t// // \t\t</Overlay>\r\n\t// // \t\t<div className=\"sensorPowerLocDevice\">\r\n\t// // \t\t\t{props.data.device_name}\r\n\t// // \t\t\t<br></br>\r\n\t// // \t\t\t{props.data.device_location}\r\n\t// // \t\t</div>\r\n\t// // \t\t<div className=\"row scrollComponent\">\r\n\t// // \t\t\t{compData !== null &&\r\n\t// // \t\t\t\tcompData !== undefined &&\r\n\t// // \t\t\t\tcompData.map((li, index) => (\r\n\t// // \t\t\t\t\t<>\r\n\t// // \t\t\t\t\t\t{li.component_name !== undefined ? (\r\n\t// // \t\t\t\t\t\t\t<div\r\n\t// // \t\t\t\t\t\t\t\tclassName=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\r\n\t// // \t\t\t\t\t\t\t\tkey={index}>\r\n\t// // \t\t\t\t\t\t\t\t<div className=\"row\" key={index + 'a'}>\r\n\t// // \t\t\t\t\t\t\t\t\t<div\r\n\t// // \t\t\t\t\t\t\t\t\t\tclassName=\"col-12 col-sm-12 col-md-11 col-lg-11 col-xl-11 nestedCOmpSensorPower\"\r\n\t// // \t\t\t\t\t\t\t\t\t\tkey={index + 's'}>\r\n\t// // \t\t\t\t\t\t\t\t\t\t{li.component_name !== undefined && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t<span className=\"compName\">{li.component_name}</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t{li.data_type === 'Boolean' && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t<label className=\"switch\">\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"init_value\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tli.init_value === 'true' ? true : false\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbooleanCompUpdate(\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tli.data_type,\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tli.component_id\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={li.in_out === 'C2D' ? false : true}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"slider round\"></span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t<hr></hr>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t{li.data_type === 'String' && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t<>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit(triggerData)}>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t{li.in_out === 'C2D' &&\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t(compDisabled || ind !== index) ? (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btnForSend float-right\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => editComponent(index)}>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ri-edit-line ri-lg commonIcon \"></i>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t) : circleLoading === true &&\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t  (compDisabled || ind === index) ? (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right loaderEdit_comp\"></span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tcompDisabled === false &&\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tind === index && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btnForSend float-right\">\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ri-send-plane-line ri-lg commonIcon  sendIcopn\"></i>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.data.device_id}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"device_id\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hiddenelement\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={li.data_type}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hiddenelement\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"data_type\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={li.component_id}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hiddenelement\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"comp_id\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\tref={register}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t{li.in_out === 'C2D' && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"init_value\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={li.init_value}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={compDisabled || ind !== index}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={register({ required: true })}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.init_value\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'form-control error_input'\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'form-control'\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeText}></textarea>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t{li.in_out === 'D2C' && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"init_value\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={li.init_value}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"></textarea>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t{li.init_value === null ? (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-left lastUpdated\">{`${0}/100`}</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"float-left lastUpdated\">{`${li.init_value.length}/100`}</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t{errors.init_value && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-danger\">\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThis field cannot be empty\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\t<hr></hr>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t</>\r\n\t// // \t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t<>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t{index === ind ? (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"float-right lastUpdated canceltext\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={cancelClick}>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"float-right lastUpdated canceltext\"\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => deleteClick(e, li, index)}>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t</>\r\n\t// // \t\t\t\t\t\t\t\t\t\t{li.response !== undefined && (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t<div className={li.responseType}>{li.response}</div>\r\n\t// // \t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t\t<br></br>\r\n\t// // \t\t\t\t\t\t\t\t\t\t{li.updated_at === undefined ? null : (\r\n\t// // \t\t\t\t\t\t\t\t\t\t\t<div className=\"lastUpdated\">{`Last updated on ${li.updated_at}`}</div>\r\n\t// // \t\t\t\t\t\t\t\t\t\t)}\r\n\t// // \t\t\t\t\t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t\t\t</div>\r\n\t// // \t\t\t\t\t\t) : null}\r\n\t// // \t\t\t\t\t</>\r\n\t// // \t\t\t\t))}\r\n\t// // \t\t</div>\r\n\t// // \t</div>\r\n\t// );\r\n\r\n\t//console.log(props);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.data.map((li) => {\r\n\t\t\t\tif (li.data_type === 'String') {\r\n\t\t\t\t\treturn <TextComp data={li} />;\r\n\t\t\t\t}\r\n\t\t\t\tif (li.data_type === 'Boolean') {\r\n\t\t\t\t\treturn <BooleanComp data={li} />;\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SensorPowerComponent;\r\n",["248","249"],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Rules\\Rules.js",["250"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport GoBack from '../../Components/GoBack';\r\nimport DeviceInfo from '../../Components/Rules_Components/DeviceInfo';\r\nimport CompList from '../../Components/Rules_Components/ComponentList';\r\nimport { GETCOMPONENTSRULES } from '../../Queries';\r\nimport { DELETERULE } from '../../Mutations';\r\nimport Loaders from '../../Components/Loader/Loader';\r\nimport DeleteModalRule from '../../Components/Modals/DeleteRule';\r\n\r\nfunction Rules(props) {\r\n\tlet history = useHistory();\r\n\tlet mac = props.match.params.mac_address;\r\n\r\n\tconst [device_info, setdevice_info] = useState([]);\r\n\tconst [Device_comp, setDevice_comp] = useState([]);\r\n\tconst [circleModal, setcircleModal] = useState(false);\r\n\tconst [showRuleDeleteModal, setshowRuleDeleteModal] = useState(false);\r\n\tconst [deleteRuleData, setdeleteRuleData] = useState({});\r\n\tconst { loading, data } = useQuery(GETCOMPONENTSRULES, {\r\n\t\tfetchPolicy: 'network-only',\r\n\t\tvariables: { mac_address: mac },\r\n\t});\r\n\tconst [deleteRuleFun] = useMutation(DELETERULE, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tsetDevice_comp(\r\n\t\t\t\tDevice_comp.map((element) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...element,\r\n\t\t\t\t\t\trules: element.rules.filter(\r\n\t\t\t\t\t\t\t(subElement) => subElement.rule_id !== deleteRuleData.rId\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetcircleModal(false);\r\n\t\t\tsetshowRuleDeleteModal(false);\r\n\t\t},\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tif (loading === false) {\r\n\t\t\tsetdevice_info(data.getDevCompsRules.device_info);\r\n\t\t\tsetDevice_comp(data.getDevCompsRules.device_components);\r\n\t\t}\r\n\t}, [data, loading]);\r\n\tconst gobackClick = () => {\r\n\t\thistory.push('/device');\r\n\t};\r\n\tconst closeRuleModal = () => {\r\n\t\tsetshowRuleDeleteModal(false);\r\n\t};\r\n\tconst removeRule = (rId, cId, ind) => {\r\n\t\tlet d = {\r\n\t\t\trId,\r\n\t\t\tcId,\r\n\t\t\tind,\r\n\t\t};\r\n\t\tsetdeleteRuleData(d);\r\n\t\tsetshowRuleDeleteModal(true);\r\n\t};\r\n\tconst deleteRule = async () => {\r\n\t\tsetcircleModal(true);\r\n\t\ttry {\r\n\t\t\tawait deleteRuleFun({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tmac_address: mac,\r\n\t\t\t\t\tcomponent_id: deleteRuleData.cId,\r\n\t\t\t\t\trule_id: deleteRuleData.rId,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tsetcircleModal(false);\r\n\t\t}\r\n\t};\r\n\t// if (loading) return <div class=\"loading-container\">\r\n\t// \t<div class=\"loading\"></div>\r\n\t// \t<div id=\"loading-text\" className=\"text-primary font-weight-bolder\">loading</div>\r\n\t// </div>;\r\n\tif (loading) return <Loaders />;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"fixedHead\">\r\n\t\t\t\t<GoBack Goback={gobackClick} />\r\n\t\t\t\t<div className=\"textWithBack fs-2 ml-5\">Device settings</div>\r\n\t\t\t</div>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<DeviceInfo device_info={device_info} />\r\n\t\t\t{Device_comp.length > 0 && (\r\n\t\t\t\t<div className=\"deviceComponent_heading mt-3 mb-2\">\r\n\t\t\t\t\tDevice components\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<CompList Device_comp={Device_comp} removeRule={removeRule} />\r\n\t\t\t<DeleteModalRule\r\n\t\t\t\tshowRuleDeleteModal={showRuleDeleteModal}\r\n\t\t\t\tcloseRuleModal={closeRuleModal}\r\n\t\t\t\tdeleteRule={deleteRule}\r\n\t\t\t\tcircleModal={circleModal}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rules;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\DeviceInfo.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\ComponentList.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\godaddy.js",[],["251","252"],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Rules\\CreateRule.js",["253"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Back from '../../Components/GoBack';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport InputFileds from '../../Components/Rules_Components/formFields';\r\nimport { useMutation, useLazyQuery } from '@apollo/react-hooks';\r\nimport Loader from 'react-loader-spinner';\r\nimport Loaders from '../../Components/Loader/Loader';\r\nimport DeleteModalRule from '../../Components/Modals/DeleteRule';\r\nimport DeleteConditionModal from '../../Components/Modals/DeleteCondition';\r\n\r\nimport {\r\n\tCREATERULESPERDEVCOMP,\r\n\tEDITCONDITIONS,\r\n\tDELETERULE,\r\n\tDELETECONDITION,\r\n} from '../../Mutations';\r\nimport { GETRULESANDCONDITIONS } from '../../Queries';\r\n\r\nfunction CreateRule(props) {\r\n\tlet min_val = localStorage.getItem('min');\r\n\tlet max_val = localStorage.getItem('max');\r\n\tconst [showRuleDeleteModal, setshowRuleDeleteModal] = useState(false);\r\n\tconst [showConditionModal, setshowConditionModal] = useState(false);\r\n\tconst [circleModal, setcircleModal] = useState(false);\r\n\r\n\tconst [indconditionDelete, setindconditionDelete] = useState({});\r\n\tconst [ruleDataOnModalClick, setruleDataOnModalClick] = useState();\r\n\r\n\tconst [showEdit, setshowEdit] = useState(true);\r\n\tconst [rData, setrData] = useState({});\r\n\tconst [prevData, setprevData] = useState();\r\n\tconst [prevListData, setprevListData] = useState([]);\r\n\tconst [circleLoading, setcircleLoading] = useState(false);\r\n\tconst [isEditable, setisEditable] = useState(false);\r\n\tconst [loading, setloading] = useState(false);\r\n\r\n\tlet component_id = props.match.params.component_id;\r\n\tconst { register, handleSubmit, errors, control, reset } = useForm();\r\n\r\n\tconst [rule_data, setrule_data] = useState({});\r\n\r\n\tconst [inputList, setInputList] = useState([]);\r\n\r\n\tconst [saveData] = useMutation(CREATERULESPERDEVCOMP, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tsetcircleLoading(false);\r\n\t\t\tprops.history.goBack();\r\n\t\t},\r\n\t});\r\n\r\n\tconst [editData] = useMutation(EDITCONDITIONS, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tsetcircleLoading(false);\r\n\t\t\tsetshowEdit(true);\r\n\t\t},\r\n\t});\r\n\tconst [deleteCondition] = useMutation(DELETECONDITION, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tsetcircleModal(false);\r\n\t\t\tsetshowEdit(true);\r\n\r\n\t\t\tconst list = [...inputList];\r\n\t\t\tlist.splice(indconditionDelete.ind, 1);\r\n\t\t\tsetInputList(list);\r\n\t\t\tsetshowConditionModal(false);\r\n\t\t},\r\n\t});\r\n\tconst [deleteRuleFun] = useMutation(DELETERULE, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tprops.history.goBack();\r\n\t\t},\r\n\t});\r\n\tconst [getrulesncond] = useLazyQuery(GETRULESANDCONDITIONS, {\r\n\t\tfetchPolicy: 'network-only',\r\n\t\tonCompleted: (data) => {\r\n\t\t\tsetInputList(data.getRuleConditions.conditions);\r\n\t\t\tsetrule_data(data.getRuleConditions.rule_data);\r\n\t\t\tsetprevData(data.getRuleConditions.rule_data);\r\n\t\t\tsetprevListData(data.getRuleConditions.conditions);\r\n\r\n\t\t\tsetisEditable(true);\r\n\t\t\tsetloading(false);\r\n\t\t},\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tlet edit = localStorage.getItem('edit');\r\n\t\tlet rule_id = localStorage.getItem('rule_id');\r\n\t\tlet mac_address = localStorage.getItem('mac_address');\r\n\r\n\t\tif (edit === 'true') {\r\n\t\t\tsetloading(true);\r\n\t\t\ttry {\r\n\t\t\t\tgetrulesncond({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tmac_address: mac_address,\r\n\t\t\t\t\t\tcomponent_id: component_id,\r\n\t\t\t\t\t\trule_id: rule_id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetloading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (edit === 'false') {\r\n\t\t\tsetInputList([\r\n\t\t\t\t{\r\n\t\t\t\t\tcondition_name: '',\r\n\t\t\t\t\tcondition_name_other: '',\r\n\t\t\t\t\tcolor: '#91DAD8',\r\n\t\t\t\t\tMinimum_Condition: min_val,\r\n\t\t\t\t\tMaximum_Condition: max_val,\r\n\t\t\t\t\tcondition: '',\r\n\t\t\t\t\tvalue: '',\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (isEditable === true) {\r\n\t\t\tsetshowEdit(true);\r\n\t\t\tsetrData(rule_data);\r\n\t\t} else {\r\n\t\t\tsetshowEdit(false);\r\n\t\t}\r\n\t}, [isEditable]);\r\n\tuseEffect(() => {\r\n\t\tif (isEditable === true) {\r\n\t\t\tsetrData(rule_data);\r\n\t\t}\r\n\t}, [rule_data]);\r\n\t// const handleInputChange = (e, index) => {\r\n\t// \tconst { name, value } = e.target;\r\n\t// \tconst list = [...inputList];\r\n\t// \tlist[index][name] = value;\r\n\t// \tsetInputList(list);\r\n\t// };\r\n\r\n\tconst RemoveCondition = (li, index, rdta) => {\r\n\t\tlet d = {\r\n\t\t\tid: li.condition_id,\r\n\t\t\tind: index,\r\n\t\t\trule_id: rdta.rule_id,\r\n\t\t};\r\n\r\n\t\tsetindconditionDelete(d);\r\n\t\tif (isEditable === false) {\r\n\t\t\tconst list = [...inputList];\r\n\t\t\tlist.splice(index, 1);\r\n\t\t\tsetInputList(list);\r\n\t\t} else {\r\n\t\t\tsetshowConditionModal(true);\r\n\t\t}\r\n\t};\r\n\tconst deleteConditionModal = async () => {\r\n\t\tsetcircleModal(true);\r\n\t\tlet mac = localStorage.getItem('mac_address');\r\n\r\n\t\ttry {\r\n\t\t\tdeleteCondition({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tmac_address: mac,\r\n\t\t\t\t\tcomponent_id: component_id,\r\n\t\t\t\t\trule_id: indconditionDelete.rule_id,\r\n\t\t\t\t\tcondition_id: indconditionDelete.id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tsetcircleModal(false);\r\n\t\t}\r\n\t};\r\n\tconst DeleteRule = (dta) => {\r\n\t\tsetshowRuleDeleteModal(true);\r\n\t\tsetruleDataOnModalClick(dta);\r\n\t};\r\n\tconst deleteRule = async () => {\r\n\t\tlet mac_address = localStorage.getItem('mac_address');\r\n\r\n\t\tlet rule_id = ruleDataOnModalClick.rule_id;\r\n\r\n\t\tsetcircleModal(true);\r\n\t\ttry {\r\n\t\t\tawait deleteRuleFun({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tmac_address: mac_address,\r\n\t\t\t\t\tcomponent_id: component_id,\r\n\t\t\t\t\trule_id: rule_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tsetcircleModal(true);\r\n\t\t}\r\n\t};\r\n\tconst handleAddClick = () => {\r\n\t\tsetInputList([\r\n\t\t\t...inputList,\r\n\t\t\t{\r\n\t\t\t\tcondition_name: '',\r\n\t\t\t\tcondition_name_other: '',\r\n\t\t\t\tcolor: '#91DAD8',\r\n\t\t\t\tMinimum_Condition: min_val,\r\n\t\t\t\tMaximum_Condition: max_val,\r\n\t\t\t\tcondition: '',\r\n\t\t\t\tvalue: '',\r\n\t\t\t},\r\n\t\t]);\r\n\t};\r\n\tconst FormSubmit = async (e) => {\r\n\t\tsetcircleLoading(true);\r\n\r\n\t\tif (e.rule_id) {\r\n\t\t\ttry {\r\n\t\t\t\tawait editData({ variables: { input: e } });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetcircleLoading(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tawait saveData({ variables: { data: e } });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetcircleLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst BackTORUles = () => {\r\n\t\tprops.history.goBack();\r\n\t};\r\n\tconst onCHangeCondition = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, condition: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\tconst onCHangeConditionName = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, condition_name: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\r\n\tconst onCHangeValue = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, value: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\tconst onChangeOtherNAme = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, other_name: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\r\n\tconst onCHangeMinSlider = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, Minimum_Condition: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\tconst onChangeMaxSlider = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, Maximum_Condition: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\tconst onCHangeRulename = (e) => {\r\n\t\tlet name = e.target.name;\r\n\t\tlet value = e.target.value;\r\n\r\n\t\tsetrule_data((rule_data) => ({ ...rule_data, [name]: value }));\r\n\t};\r\n\tconst onChangeColor = (e, ind) => {\r\n\t\tlet val = e.target.value;\r\n\r\n\t\tconst updatedInputHolder = inputList.map((obj, idx) => {\r\n\t\t\tif (idx === ind) {\r\n\t\t\t\treturn { ...obj, color: val };\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\tsetInputList(updatedInputHolder);\r\n\t};\r\n\tconst EditConditions = () => {\r\n\t\tsetshowEdit(false);\r\n\t};\r\n\tconst CancelClick = () => {\r\n\t\tsetshowEdit(true);\r\n\t\tsetrData(prevData);\r\n\t\tsetInputList(prevListData);\r\n\t\treset();\r\n\t};\r\n\tif (loading) {\r\n\t\t// return <div class=\"loading-container\">\r\n\t\t// \t<div class=\"loading\"></div>\r\n\t\t// \t<div id=\"loading-text\" className=\"text-primary font-weight-bolder\">loading</div>\r\n\t\t// </div>;\r\n\t\treturn <Loaders />;\r\n\t}\r\n\tconst closeRuleModal = () => {\r\n\t\tsetshowRuleDeleteModal(false);\r\n\t};\r\n\tconst cloaseConditionModal = () => {\r\n\t\tsetshowConditionModal(false);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"fixedHead\">\r\n\t\t\t\t<Back Goback={BackTORUles} />\r\n\r\n\t\t\t\t<div className=\"fs-2  textWithBack  ml-5\">Create rules</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mb-3 ml-5 fs-5 text-muted\">\r\n\t\t\t\t\t\tSetting rules with their conditions will help you create an\r\n\t\t\t\t\t\tefficient device monitoring. Create upto 3 conditions under each\r\n\t\t\t\t\t\trule.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t<InputFileds\r\n\t\t\t\tinputList={inputList}\r\n\t\t\t\thandleAddClick={handleAddClick}\r\n\t\t\t\tRemoveCondition={RemoveCondition}\r\n\t\t\t\tregister={register}\r\n\t\t\t\terrors={errors}\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\tFormSubmit={FormSubmit}\r\n\t\t\t\tController={Controller}\r\n\t\t\t\tcontrol={control}\r\n\t\t\t\tonCHangeCondition={onCHangeCondition}\r\n\t\t\t\tonCHangeConditionName={onCHangeConditionName}\r\n\t\t\t\tonCHangeValue={onCHangeValue}\r\n\t\t\t\tonChangeOtherNAme={onChangeOtherNAme}\r\n\t\t\t\tonChangeColor={onChangeColor}\r\n\t\t\t\tonCHangeMinSlider={onCHangeMinSlider}\r\n\t\t\t\tonChangeMaxSlider={onChangeMaxSlider}\r\n\t\t\t\tcomponent_id={component_id}\r\n\t\t\t\tcircleLoading={circleLoading}\r\n\t\t\t\tBackTORUles={BackTORUles}\r\n\t\t\t\tisEditable={isEditable}\r\n\t\t\t\trData={rData}\r\n\t\t\t\tonCHangeRulename={onCHangeRulename}\r\n\t\t\t\tEditConditions={EditConditions}\r\n\t\t\t\tshowEdit={showEdit}\r\n\t\t\t\treset={reset}\r\n\t\t\t\tCancelClick={CancelClick}\r\n\t\t\t\tDeleteRule={DeleteRule}\r\n\t\t\t/>\r\n\t\t\t<DeleteModalRule\r\n\t\t\t\tshowRuleDeleteModal={showRuleDeleteModal}\r\n\t\t\t\tcloseRuleModal={closeRuleModal}\r\n\t\t\t\tdeleteRule={deleteRule}\r\n\t\t\t\tcircleModal={circleModal}\r\n\t\t\t/>\r\n\t\t\t<DeleteConditionModal\r\n\t\t\t\tcloaseConditionModal={cloaseConditionModal}\r\n\t\t\t\tshowConditionModal={showConditionModal}\r\n\t\t\t\tdeleteConditionModal={deleteConditionModal}\r\n\t\t\t\tcircleModal={circleModal}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateRule;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Rules_Components\\formFields.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteRule.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\DeleteCondition.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\ViewDetailsWidget.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Modals\\EditModalWidget.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\BooleanComp.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\SensorpowerWidgets\\Text.js",["254","255"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n//---- context\r\nimport { loadingcontext } from '../../../Context/loadingContextSensorpower';\r\n\r\nfunction Text(props) {\r\n\tconst { loading, indSensorPower } = useContext(loadingcontext);\r\n\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\r\n\treturn (\r\n\t\t<div className=\"pt-3 mr-2\">\r\n\t\t\t<div className=\"fs-4 text-error font-weight-bold\">\r\n\t\t\t\t{props.data.init_value}\r\n\t\t\t</div>\r\n\r\n\t\t\t<form onSubmit={handleSubmit(props.sendTextFunc)}>\r\n\t\t\t\t{props.data.in_out !== 'D2C' ? (\r\n\t\t\t\t\t<div className=\"input-group mt-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"init_value\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter your message to device here\"\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\tloading === true &&\r\n\t\t\t\t\t\t\t\tprops.data.component_id === parseInt(indSensorPower)\r\n\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: 'Please type something',\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t{loading === true &&\r\n\t\t\t\t\t\t\tprops.data.component_id === parseInt(indSensorPower) ? (\r\n\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right circleOnUpdateSending\"></span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-info ml-1\">Send</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{errors.init_value && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"fs-7 text-error\">{errors.init_value.message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{props.data.responseType === 'success' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"text-success\">{props.data.response}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{props.data.responseType === 'connection_time_out' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"fs-7 text-error\">{props.data.response}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{props.data.responseType === 'method_time_out' && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"fs-7 text-error\">{props.data.response}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{props.data.responseType !== 'method_time_out' &&\r\n\t\t\t\t\tprops.data.responseType !== 'connection_time_out' &&\r\n\t\t\t\t\tprops.data.responseType !== 'success' && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"fs-7 text-error\">{props.data.response}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\tname=\"comp_id\"\r\n\t\t\t\t\tvalue={props.data.component_id}\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\tname=\"data_type\"\r\n\t\t\t\t\tvalue={props.data.data_type}\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\tname=\"device_id\"\r\n\t\t\t\t\tvalue={props.device_id}\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\tname=\"dashboard_id\"\r\n\t\t\t\t\tvalue={props.dashboard_id}\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"hidden\"\r\n\t\t\t\t\tname=\"widget_id\"\r\n\t\t\t\t\tvalue={props.widget_id}\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Text;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\Charts.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\PieChart\\PieChart.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\BarChart\\BarChart.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\LineChart\\LineChart.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\PieChart\\PieSliceComponent.js",["256"],"import React, { useState, useEffect } from 'react';\r\nimport { arc } from 'd3-shape';\r\nimport { select } from 'd3';\r\n//import { chartDataValue } from '../Charts';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { chartDataValue } from '../Charts';\r\n\r\n//console.log(\"Pie Slice Re-renders\")\r\n\r\n\r\nconst animateSlice = (sliceRef, slice, innerRadius, outerRadius) => {\r\n\tconst el = select(sliceRef.current);\r\n\tconst arcFinal3 = arc()\r\n\t\t.innerRadius(innerRadius)\r\n\t\t.outerRadius(outerRadius)\r\n\t\t.startAngle(slice.startAngle)\r\n\t\t.endAngle(slice.endAngle);\r\n\tel.select(\"path\")\r\n\t\t// .style(\"stroke\", \"white\")\r\n\t\t// .style(\"stroke-width\", 7.5)\r\n\t\t.transition()\r\n\t\t.duration(700)\r\n\t\t.attr(\"d\", arcFinal3);\r\n};\r\n\r\nconst sliceTextStyle = {\r\n\tclass: \"fs-1\",\r\n\tfontSize: '1.3px',\r\n\t//fontFamily: 'verdana',\r\n\tfontWeight: 'light',\r\n\t//zIndex: '445'\r\n};\r\n\r\nconst PieSliceComponent = props => {\r\n\tconst sliceRef = React.createRef();\r\n\tconst [hoveredSlice, setHoveredSlice] = useState(null);\r\n\tconst [unHoveredSlice, setUnHoveredSlice] = useState(null);\r\n\r\n\tconst outerRadius = 15;\r\n\tconst innerRadius = 0;\r\n\r\n\tconst { index, value, fill, label, sensorCondition, sensorTime } = props;\r\n\r\n\tconst sliceArc = arc()\r\n\t\t.innerRadius(innerRadius)\r\n\t\t.outerRadius(outerRadius);\r\n\r\n\tconst sliceArc2 = arc()\r\n\t\t.innerRadius(innerRadius)\r\n\t\t.outerRadius(22);\r\n\r\n\t///////////////////////////////PREV MOD//////////////\r\n\t// useEffect(() => {\r\n\t// \tif (hoveredSlice !== null) {\r\n\t// \t\tconst selectedInnerRadius = innerRadius\r\n\t// \t\tconst selectedOuterRadius = outerRadius * 1.10;  // OUTER ZOOM\r\n\t// \t\tanimateSlice(sliceRef, hoveredSlice, selectedInnerRadius, selectedOuterRadius, outerRadius);\r\n\t// \t}\r\n\t// \tsetUnHoveredSlice(null);\r\n\t// }, [hoveredSlice, sliceRef]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (unHoveredSlice !== null) {\r\n\t// \t\tanimateSlice(sliceRef, unHoveredSlice, innerRadius, outerRadius);\r\n\t// \t}\r\n\t// \tsetHoveredSlice(null);\r\n\t// }, [unHoveredSlice, sliceRef, innerRadius]);\r\n\r\n\t////////////////////////////////////////////////////////////////USE-EFFECT REWORK 19-03-2021\r\n\tuseEffect(() => {\r\n\t\tif (hoveredSlice !== null) {\r\n\t\t\tconst selectedInnerRadius = innerRadius;\r\n\t\t\tconst selectedOuterRadius = outerRadius * 1.10; // OUTER ZOOM\r\n\t\t\tanimateSlice(sliceRef, hoveredSlice, selectedInnerRadius, selectedOuterRadius, outerRadius, innerRadius);\r\n\t\t\t//setTimeout(() => setUnHoveredSlice(value), 15000)\r\n\t\t}\r\n\t\telse if (unHoveredSlice !== null) {\r\n\t\t\tanimateSlice(sliceRef, unHoveredSlice, innerRadius, outerRadius);\r\n\t\t}\r\n\t\t// else { setUnHoveredSlice(value) }\r\n\t\tsetUnHoveredSlice(null);\r\n\t\tsetHoveredSlice(null);\r\n\t}, [hoveredSlice, sliceRef, unHoveredSlice, innerRadius, outerRadius, value]);\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tconst renderTooltip = (props) => (\r\n\t\t<Tooltip id=\"button-tooltip\" {...props}>\r\n\t\t\t{value.value} {sensorCondition};{' '}\r\n\t\t\t{sensorTime}\r\n\t\t</Tooltip>\r\n\t);\r\n\r\n\t//const label = chartDataValue[index].sensorValue + \"%\"\r\n\r\n\r\n\treturn (\r\n\t\t<g>\r\n\t\t\t<g\r\n\t\t\t\t//className=\"Pie_Responsive1Pie\"\r\n\t\t\t\t//onMouseEnter={() => setHoveredSlice(value)}\r\n\t\t\t\t//onMouseOver={()=>setHoveredSlice(value)}\r\n\t\t\t\tonMouseOver={() => {\r\n\t\t\t\t\tsetHoveredSlice(value);\r\n\t\t\t\t\t//\tsetTimeout(() => setUnHoveredSlice(value), 15000);\r\n\t\t\t\t}}\r\n\t\t\t\t//onMouseOverCapture={setTimeout(() => setUnHoveredSlice(value), 5000)}\r\n\t\t\t\t//onMouseLeave={() => setUnHoveredSlice(value)}\r\n\t\t\t\tonMouseOut={() => setUnHoveredSlice(value)}\r\n\t\t\t\tonMouseMove={() => {\r\n\t\t\t\t\tsetHoveredSlice(value);\r\n\t\t\t\t\t//\tsetTimeout(() => setUnHoveredSlice(value), 15000);\r\n\t\t\t\t}}\r\n\t\t\t\t//onMouseMoveCapture={setTimeout(() => setUnHoveredSlice(value), 5000)}\r\n\t\t\t\tref={sliceRef}\r\n\t\t\t\tindex={index}>\r\n\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\tplacement=\"top\"\r\n\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t<path d={sliceArc(value)}\r\n\t\t\t\t\t\tfill={fill}\r\n\t\t\t\t\t\t//stroke=\"white\"\r\n\t\t\t\t\t\t// strokeWidth=\"0.1\"\r\n\t\t\t\t\t\t// strokeLinejoin=\"round\"\r\n\t\t\t\t\t\tclassName=\"pieEntryAnimation\"\r\n\t\t\t\t\t\tcursor=\"pointer\" />\r\n\t\t\t\t</OverlayTrigger>\r\n\r\n\t\t\t\t{/* <OverlayTrigger\r\n\t\t\t\tplacement=\"top\"\r\n\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\tref={sliceRef}\r\n\t\t\t\tindex={index}\r\n\t\t\t\toverlay={renderTooltip}> */}\r\n\r\n\t\t\t\t{/* </OverlayTrigger> */}\r\n\r\n\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\tplacement=\"top\"\r\n\t\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\t\toverlay={renderTooltip}>\r\n\t\t\t\t\t<text\r\n\t\t\t\t\t\t// transform={`translate(${sliceArc.centroid(value)}) rotate(${angle( value )})`}\r\n\t\t\t\t\t\ttransform={`translate(${sliceArc2.centroid(value)})`}\r\n\t\t\t\t\t\t//dy=\".35em\"\r\n\t\t\t\t\t\t//dx=\"55em\"\r\n\t\t\t\t\t\t//dz=\"22\"\r\n\t\t\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t\t\t\tfill=\"black\"\r\n\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\tstyle={sliceTextStyle}>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t</text>\r\n\t\t\t\t</OverlayTrigger>\r\n\r\n\t\t\t\t<g\r\n\t\t\t\t//zIndex=\"230\"\r\n\t\t\t\t//className=\"Pie_Responsive2Legend\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<text\r\n\t\t\t\t\t\t\tdy={index * 2 + -6.5}\r\n\t\t\t\t\t\t\t//dy={index * 2.5 + -17.5}\r\n\t\t\t\t\t\t\tdx={20}\r\n\t\t\t\t\t\t\ttextAnchor=\"left\"\r\n\t\t\t\t\t\t\tfill=\"grey\"\r\n\t\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\t\tstyle={sliceTextStyle}>\r\n\t\t\t\t\t\t\t{sensorCondition}\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t\t{/* </OverlayTrigger> */}\r\n\r\n\t\t\t\t\t\t{/* <OverlayTrigger\r\n\t\t\t\tplacement=\"left\"\r\n\t\t\t\tdelay={{ show: 100 }}\r\n\t\t\t\toverlay={renderTooltip}> */}\r\n\t\t\t\t\t\t<circle\r\n\t\t\t\t\t\t\tfill={fill}\r\n\t\t\t\t\t\t\tstroke=\"lightgrey\"\r\n\t\t\t\t\t\t\tstrokeWidth={0.04}\r\n\t\t\t\t\t\t\tcx={18.5}\r\n\t\t\t\t\t\t\tcy={index * 2 + -7}\r\n\t\t\t\t\t\t\t//cy={index * 2.5 + -18}\r\n\t\t\t\t\t\t\tr={0.6}\r\n\t\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t</g>\r\n\t);\r\n};\r\n\r\nexport default PieSliceComponent;","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\GaugeChart\\GaugeChart.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\test2.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\ComponentTest.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\tabHours.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Styles\\Styles.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\DashboardBar.js",["257","258","259"],"/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\n\r\n// bootstrap\r\nimport { Popover, Overlay, Modal } from 'react-bootstrap';\r\n\r\nimport Empty from '../../Components/Empty_pages/empty';\r\nimport modalDelete from '../../Files/DeleteData';\r\nimport ModalDash from '../Modals/dashboardNAme';\r\nimport DeleteModal from '../Modals/DeleteModal';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\n// ------ Select -------------\r\nimport styles from '../../Styles/Styles.js';\r\n\r\n// form elements\r\nimport Select from 'react-select';\r\nimport { useForm } from 'react-hook-form';\r\nimport decodeJWT from 'jwt-decode';\r\n\r\n//components\r\nimport GridLayout from 'react-grid-layout';\r\nimport RightBar from './rightbar';\r\n\r\nimport '../../Styles/ResizeGridLayout.css';\r\nimport Widgets from './widgets';\r\n\r\n//---- context\r\nimport { loadingcontext } from '../../Context/loadingContextSensorpower';\r\nimport Loaders from '../../Components/Loader/Loader';\r\n\r\n// graphql\r\nimport {\r\n\tuseQuery,\r\n\tuseMutation,\r\n\tuseSubscription,\r\n\tuseLazyQuery,\r\n} from '@apollo/react-hooks';\r\nimport { D2CMESSAGE, CHARTWSDATA } from '../../Subscriptions';\r\nimport {\r\n\tDASHBOARDDATABYID,\r\n\tDASHBOARDLIST,\r\n\tGETDEVICEDATASET,\r\n} from '../../Queries';\r\nimport {\r\n\tEDITWIDGET,\r\n\tUPDATECOMPONENTS,\r\n\tDATAONTIMEINTERVEL,\r\n} from '../../Mutations';\r\nimport {\r\n\tDELETEDASHBOARD,\r\n\tDELETEWIDGET,\r\n\tEDITDASHNAME,\r\n\tSAVEDASHBOARDNAME,\r\n\tSAVEUSERDASHBOARD,\r\n} from '../../Mutations';\r\n\r\n// Stylesheet\r\nimport '../../Styles/modal_popover.css';\r\nimport '../../Styles/chart.css';\r\n\r\nconst layoutRightBAr = [{ i: 'a', x: 0, y: 0, w: 2, h: 2 }];\r\n\r\nfunction DashboardBar() {\r\n\tlet token = localStorage.getItem('btoken');\r\n\tlet email_id = '';\r\n\tif (token) {\r\n\t\tconst decoded = decodeJWT(token);\r\n\t\temail_id = decoded.emails;\r\n\t}\r\n\tconst context = useContext(loadingcontext);\r\n\tconst { widgetId } = useContext(loadingcontext);\r\n\r\n\tlet active_tab = localStorage.getItem('active_tab') || 0;\r\n\t//\tconsole.log(active_tab);\r\n\tconst [activeDashboard, setactiveDashboard] = useState(Number(active_tab));\r\n\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\r\n\t//Popover --------------------\r\n\r\n\tconst [set_popover, set_popover_disabled] = useState(false);\r\n\tconst [target, setTarget] = useState(null);\r\n\r\n\t//Modal --- states\r\n\r\n\tconst [modaldata, setmodaldata] = useState(null);\r\n\tconst [createDash, setcreateDash] = useState(null);\r\n\tconst [dashboard_modal, setdashboard_modal] = useState(false);\r\n\tconst [editDashboard, seteditDashboard] = useState(null);\r\n\tconst [circleloading, setcircleloading] = useState(false);\r\n\tconst [disabled, setdisabled] = useState(false);\r\n\tconst [showCreatewidgetModal, setshowCreatewidgetModal] = useState(false);\r\n\tconst [widgetName, setwidgetName] = useState('');\r\n\tconst [Widgettittle, setWidgettittle] = useState('');\r\n\r\n\t// dashboard modal ---------------\r\n\tconst [dashboardNameEdit, setdashboardNameEdit] = useState(null);\r\n\tconst [showdashboard, setshowdashboard] = useState(false);\r\n\tconst [showModalDelete, setshowModalDelete] = useState(false); // show_modal_delete\r\n\tconst [indexIdDelete, setindexDelete] = useState(null); // index_id\r\n\r\n\tconst [selected_device, setselected_device] = useState();\r\n\tconst [selecteddataset, setselecteddataset] = useState();\r\n\r\n\tconst [rules, setrules] = useState();\r\n\tconst [sensorSelected, setsensorSelected] = useState();\r\n\tconst [allDevices, setallDevices] = useState();\r\n\tconst [allDataSets, setallDataSets] = useState();\r\n\tconst [allRules, setallRules] = useState();\r\n\tconst [sensorData, setsensorData] = useState();\r\n\r\n\t//----------------------- widgets\r\n\r\n\tconst [setPopoverWidget, setsetPopoverWidget] = useState(false);\r\n\tconst [widgetActionData, setwidgetActionData] = useState(null);\r\n\tconst [viewDetailsData, setviewDetailsData] = useState();\r\n\tconst [modalViewDetails, setmodalViewDetails] = useState(false);\r\n\r\n\t//---------- Edit modal ----\r\n\tconst [showEditDetailsModal, setshowEditDetailsModal] = useState(false);\r\n\tconst [editmodaldata, seteditmodaldata] = useState();\r\n\r\n\t//----------------Delete modal\r\n\tconst [WIdgetDeletedata, setWIdgetDeletedata] = useState(null);\r\n\r\n\t// graphql ---- device ----------------\r\n\tconst {\r\n\t\tdata: dataSdataSensorPowerSubs,\r\n\t\terror: errorSensorPowerSubs,\r\n\t} = useSubscription(D2CMESSAGE, {\r\n\t\tvariables: { topic: { topic: 'd2cMessage/' + email_id[0] } },\r\n\t});\r\n\r\n\tconst [\r\n\t\tgetDeviceDataset,\r\n\t\t{ loading: loadingDevice, data: deviceData },\r\n\t] = useLazyQuery(GETDEVICEDATASET, {\r\n\t\tfetchPolicy: 'network-only',\r\n\t});\r\n\r\n\t// graphql  ------------------- widgets--------\r\n\tconst [\r\n\t\tgetInitialDataFun,\r\n\t\t{ loading: loadingInitialChart, data: initialChartData },\r\n\t] = useLazyQuery(DASHBOARDDATABYID);\r\n\tconst { loading: loadingdashboard, data: dashboardList } = useQuery(\r\n\t\tDASHBOARDLIST,\r\n\t\t{\r\n\t\t\tfetchPolicy: 'network-only',\r\n\t\t}\r\n\t);\r\n\r\n\tconst { data: ChartSubsData, error: chartSubsError } = useSubscription(\r\n\t\tCHARTWSDATA,\r\n\t\t{\r\n\t\t\tvariables: { topic: { topic: 'sensordata/' + email_id[0] } },\r\n\t\t}\r\n\t);\r\n\r\n\tconst [editDashboardGqlFun] = useMutation(EDITDASHNAME, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t});\r\n\r\n\t\t\tdata.getUserDashboardNames[active_tab].dashboard_name = dashboardNameEdit;\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\t\t\t//setactiveDashboard();\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetdashboard_modal(false);\r\n\t\t},\r\n\t});\r\n\r\n\tconst [createDashboardNameGql] = useMutation(SAVEDASHBOARDNAME, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t});\r\n\r\n\t\t\tlet res = result.data.save_dashboard_name;\r\n\t\t\tdata.getUserDashboardNames = [...data.getUserDashboardNames, res];\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\r\n\t\t\tsetactiveDashboard(data.getUserDashboardNames.length - 1);\r\n\t\t\tlocalStorage.setItem('active_tab', data.getUserDashboardNames.length - 1);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdashboard_modal(false);\r\n\r\n\t\t\tgetInitialDataFun({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[\r\n\t\t\t\t\t\t\tparseInt(data.getUserDashboardNames.length - 1)\r\n\t\t\t\t\t\t].dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t});\r\n\r\n\tconst [editWidget, { loading: loadingEdit }] = useMutation(EDITWIDGET, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tlet res = result.data.edit_sensor_widget;\r\n\r\n\t\t\tdata.getUserDashboardWidgetInfo.map((li, ind) => {\r\n\t\t\t\tif (li.widget_id === res.widget_id) {\r\n\t\t\t\t\tli.widget_title = res.widget_title;\r\n\t\t\t\t\tli.data = res.data;\r\n\t\t\t\t\tli.rule_name = res.rule_name;\r\n\t\t\t\t\tli.rule_id = res.rule_id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\t\t},\r\n\t});\r\n\r\n\tconst [DeleteDashboard] = useMutation(DELETEDASHBOARD, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t});\r\n\t\t\tdata.getUserDashboardNames = data.getUserDashboardNames.filter(\r\n\t\t\t\t(d) =>\r\n\t\t\t\t\td.dashboard_id !==\r\n\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)].dashboard_id\r\n\t\t\t);\r\n\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDLIST,\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\r\n\t\t\tif (data.getUserDashboardNames.length === 0) {\r\n\t\t\t\tsetactiveDashboard(null);\r\n\t\t\t\tlocalStorage.removeItem('active_tab');\r\n\t\t\t} else {\r\n\t\t\t\tsetactiveDashboard(data.getUserDashboardNames.length - 1);\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t'active_tab',\r\n\t\t\t\t\tdata.getUserDashboardNames.length - 1\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetshowModalDelete(false);\r\n\t\t},\r\n\t\trefetchQueries: [\r\n\t\t\t{\r\n\t\t\t\tquery: GETDEVICEDATASET,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst [Savedashboarduser, { loading: updateWidgetLoading }] = useMutation(\r\n\t\tSAVEUSERDASHBOARD,\r\n\t\t{\r\n\t\t\tupdate(proxy, result) {\r\n\t\t\t\tsetshowCreatewidgetModal(false);\r\n\t\t\t\tsetdisabled(false);\r\n\t\t\t\tlet chartRest = result.data.save_user_dashboard;\r\n\t\t\t\t//console.log(chartRest);\r\n\t\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdata.getUserDashboardWidgetInfo = [\r\n\t\t\t\t\tchartRest.widget_data[0],\r\n\t\t\t\t\t...data.getUserDashboardWidgetInfo,\r\n\t\t\t\t];\r\n\r\n\t\t\t\tproxy.writeQuery({\r\n\t\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//setData(updateWidget);\r\n\r\n\t\t\t\tsetrules('');\r\n\t\t\t\tsetallRules();\r\n\t\t\t\tsetallDevices();\r\n\t\t\t\tsetselected_device('');\r\n\t\t\t\tsetselecteddataset('');\r\n\t\t\t\tsetallDataSets('');\r\n\t\t\t},\r\n\t\t\trefetchQueries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tquery: GETDEVICEDATASET,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tawaitRefetchQueries: true,\r\n\t\t}\r\n\t);\r\n\r\n\tconst [DeleteWidget] = useMutation(DELETEWIDGET, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tdata.getUserDashboardWidgetInfo = data.getUserDashboardWidgetInfo.filter(\r\n\t\t\t\t(d) => d.widget_id !== WIdgetDeletedata.widget_id\r\n\t\t\t);\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\r\n\t\t\t//toast.success(result.data.delete_widget);\r\n\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t\tsetshowModalDelete(false);\r\n\t\t},\r\n\t\trefetchQueries: [\r\n\t\t\t{\r\n\t\t\t\tquery: GETDEVICEDATASET,\r\n\t\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tconst [updateComponents] = useMutation(UPDATECOMPONENTS, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tlet resultdata = result.data.update_user_components[0];\r\n\r\n\t\t\tdata.getUserDashboardWidgetInfo.map((widgetD, index) => {\r\n\t\t\t\tif (widgetD.widget_id === resultdata.widget_id) {\r\n\t\t\t\t\twidgetD.sensor_power_data = [resultdata];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\r\n\t\t\tcontext.clickEvent(false, null, false);\r\n\t\t},\r\n\t});\r\n\r\n\tconst [showDataOninterval] = useMutation(DATAONTIMEINTERVEL, {\r\n\t\tupdate(proxy, result) {\r\n\t\t\tlet data = proxy.readQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tlet resultData = result.data.getSensorDataOnTimeInterval;\r\n\r\n\t\t\tdata.getUserDashboardWidgetInfo.map((widgetD, index) => {\r\n\t\t\t\tif (widgetD.widget_id === resultData.widget_id) {\r\n\t\t\t\t\twidgetD.data = resultData.data;\r\n\t\t\t\t\twidgetD.data_time_interval = resultData.data_time_interval;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tproxy.writeQuery({\r\n\t\t\t\tquery: DASHBOARDDATABYID,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(active_tab)]\r\n\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t},\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\t\t\tcontext.clickEvent(false, null, false);\r\n\t\t},\r\n\t});\r\n\r\n\t//useeffect --------------------------\r\n\tuseEffect(() => {\r\n\t\tif (dataSdataSensorPowerSubs) {\r\n\t\t\tinitialChartData &&\r\n\t\t\t\tinitialChartData.getUserDashboardWidgetInfo.map((li, index) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tli.component_id === dataSdataSensorPowerSubs.d2cMessage.component_id\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tli.sensor_power_data[0].component_id =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.component_id;\r\n\t\t\t\t\t\tli.sensor_power_data[0].component_name =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.component_name;\r\n\t\t\t\t\t\tli.sensor_power_data[0].data_type =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.data_type;\r\n\t\t\t\t\t\tli.sensor_power_data[0].in_out =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.in_out;\r\n\t\t\t\t\t\tli.sensor_power_data[0].init_value =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.init_value;\r\n\t\t\t\t\t\tli.sensor_power_data[0].response = null;\r\n\t\t\t\t\t\tli.sensor_power_data[0].responseType = null;\r\n\t\t\t\t\t\tli.sensor_power_data[0].updated_at =\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs.d2cMessage.updated_at;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tif (errorSensorPowerSubs) {\r\n\t\t\ttoast.error('SUbscription Error');\r\n\t\t}\r\n\t}, [dataSdataSensorPowerSubs, initialChartData, errorSensorPowerSubs]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ChartSubsData) {\r\n\t\t\tlet timer_fun = setTimeout(() => {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}, 40 * 60 * 1000);\r\n\t\t\treturn () => {\r\n\t\t\t\tclearTimeout(timer_fun);\r\n\t\t\t};\r\n\t\t}\r\n\t}, [ChartSubsData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ChartSubsData) {\r\n\t\t\tinitialChartData &&\r\n\t\t\t\tinitialChartData.getUserDashboardWidgetInfo.map((li) =>\r\n\t\t\t\t\tChartSubsData.sensordata.map((sData) => {\r\n\t\t\t\t\t\tif (sData.widget_id === li.widget_id) {\r\n\t\t\t\t\t\t\tif (li.widget_name === 'PieChart') {\r\n\t\t\t\t\t\t\t\tif (li.data.length > 6) {\r\n\t\t\t\t\t\t\t\t\tli.data.shift();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (li.data.length > 24) {\r\n\t\t\t\t\t\t\t\t\tli.data.shift();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tli.data.push(sData.data[0]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t//  setchartLive(ChartSubsData);\r\n\t\t}\r\n\t\tif (chartSubsError) {\r\n\t\t\ttoast.error('SUbscription Error');\r\n\t\t}\r\n\t}, [initialChartData, chartSubsError, ChartSubsData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dashboardList !== undefined) {\r\n\t\t\tif (dashboardList.getUserDashboardNames.length > 0) {\r\n\t\t\t\tgetInitialDataFun({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\t\tdashboardList.getUserDashboardNames[parseInt(activeDashboard)]\r\n\t\t\t\t\t\t\t\t.dashboard_id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [activeDashboard, active_tab, dashboardList, getInitialDataFun]);\r\n\r\n\t//---------------- device useeffect -----------\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tloadingDevice === false &&\r\n\t\t\tdeviceData !== undefined &&\r\n\t\t\tdeviceData.get_device_dataset_name.length > 0\r\n\t\t) {\r\n\t\t\tlet d = {\r\n\t\t\t\tvalue: deviceData.get_device_dataset_name[0].device_id,\r\n\t\t\t\tlabel: deviceData.get_device_dataset_name[0].device_name,\r\n\t\t\t};\r\n\r\n\t\t\tsetselected_device(d);\r\n\r\n\t\t\tlet arr = [];\r\n\t\t\tdeviceData.get_device_dataset_name.map((li) => {\r\n\t\t\t\tlet d = {\r\n\t\t\t\t\tvalue: li.device_id,\r\n\t\t\t\t\tlabel: li.device_name,\r\n\t\t\t\t};\r\n\t\t\t\tarr.push(d);\r\n\t\t\t});\r\n\r\n\t\t\tsetallDevices(arr);\r\n\r\n\t\t\tif (deviceData.get_device_dataset_name[0].device_dataset.length > 0) {\r\n\t\t\t\tsetselecteddataset({\r\n\t\t\t\t\tvalue:\r\n\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0]\r\n\t\t\t\t\t\t\t.component_id,\r\n\t\t\t\t\tlabel:\r\n\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0]\r\n\t\t\t\t\t\t\t.dataset_name,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet arrDataset = [];\r\n\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset.map((li) => {\r\n\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\tvalue: li.component_id,\r\n\t\t\t\t\t\tlabel: li.dataset_name,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tarrDataset.push(d);\r\n\t\t\t\t});\r\n\t\t\t\tsetallDataSets(arrDataset);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0].rules.length >\r\n\t\t\t\t\t0\r\n\t\t\t\t) {\r\n\t\t\t\t\tsetrules({\r\n\t\t\t\t\t\tvalue:\r\n\t\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0].rules[0]\r\n\t\t\t\t\t\t\t\t.rule_id,\r\n\t\t\t\t\t\tlabel:\r\n\t\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0].rules[0]\r\n\t\t\t\t\t\t\t\t.rule_name,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlet arrRules = [];\r\n\t\t\t\t\tdeviceData.get_device_dataset_name[0].device_dataset[0].rules.map(\r\n\t\t\t\t\t\t(li) => {\r\n\t\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\t\tvalue: li.rule_id,\r\n\t\t\t\t\t\t\t\tlabel: li.rule_name,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tarrRules.push(d);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetallRules(arrRules);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetrules('');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetselecteddataset();\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tdeviceData.get_device_dataset_name[0].dev_component_names.length > 0\r\n\t\t\t) {\r\n\t\t\t\tsetsensorSelected({\r\n\t\t\t\t\tvalue:\r\n\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].dev_component_names[0]\r\n\t\t\t\t\t\t\t.component_id,\r\n\t\t\t\t\tlabel:\r\n\t\t\t\t\t\tdeviceData.get_device_dataset_name[0].dev_component_names[0]\r\n\t\t\t\t\t\t\t.component_name,\r\n\t\t\t\t});\r\n\t\t\t\tlet sensorArea = [];\r\n\t\t\t\tdeviceData.get_device_dataset_name[0].dev_component_names.map((li) => {\r\n\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\tvalue: li.component_id,\r\n\t\t\t\t\t\tlabel: li.component_name,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tsensorArea.push(d);\r\n\t\t\t\t});\r\n\t\t\t\tsetsensorData(sensorArea);\r\n\t\t\t} else {\r\n\t\t\t\tsetsensorData([]);\r\n\t\t\t\tsetsensorSelected();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [deviceData, loadingDevice]);\r\n\r\n\t// --------------------------------------view details Modal-----------------------\r\n\tconst ViewDetails = () => {\r\n\t\tsetviewDetailsData(widgetActionData);\r\n\t\tsetmodalViewDetails(true);\r\n\t};\r\n\tconst closeDetailsModal = () => {\r\n\t\tsetmodalViewDetails(false);\r\n\t};\r\n\r\n\t//functios --------------------------------------------\r\n\tconst dashboardClick = (dta, index) => {\r\n\t\tsetactiveDashboard(index);\r\n\t\tlocalStorage.setItem('active_tab', index);\r\n\t\tgetInitialDataFun({\r\n\t\t\tvariables: { dashboard_id: dta.dashboard_id },\r\n\t\t});\r\n\t};\r\n\r\n\tconst Dashboard_action = (event, li, index) => {\r\n\t\tsetactiveDashboard(index);\r\n\t\tlocalStorage.setItem('active_tab', index);\r\n\t\t// getInitialDataFun({\r\n\t\t// \tvariables: { dashboard_id: li.dashboard_id },\r\n\t\t// });\r\n\t\tset_popover_disabled(true);\r\n\t\tsetTarget(event.target);\r\n\t\tsetmodaldata(modalDelete.DELETE_DASHBOARD);\r\n\t\tseteditDashboard(li.dashboard_name);\r\n\t};\r\n\r\n\tconst CreateDashoard_modal = (d) => {\r\n\t\tsetcreateDash(d);\r\n\t\tseteditDashboard(null);\r\n\t\tsetdashboard_modal(true);\r\n\t\tsetshowdashboard(true);\r\n\t};\r\n\tconst editDashboardNameFun = (d) => {\r\n\t\tsetcreateDash(null);\r\n\t\tset_popover_disabled(false);\r\n\t\tsetdashboard_modal(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetdashboard_modal(false);\r\n\t\tsetdisabled(false);\r\n\t\tsetcircleloading(false);\r\n\t};\r\n\r\n\tconst deleteDashboard = () => {\r\n\t\tset_popover_disabled(false);\r\n\t\tsetshowModalDelete(true);\r\n\t};\r\n\r\n\tconst handleCloseDeleteModal = () => {\r\n\t\tsetshowModalDelete(false);\r\n\r\n\t\tsetcircleloading(false);\r\n\t\tsetdisabled(false);\r\n\t};\r\n\r\n\tconst widgetActionFun = (event, t) => {\r\n\t\tsetsetPopoverWidget(true);\r\n\t\tsetTarget(event.target);\r\n\t\tsetwidgetActionData(t);\r\n\t};\r\n\r\n\t// create widget --------------------------------\r\n\tconst createWidget = (widget_name, widget_title) => {\r\n\t\tsetshowCreatewidgetModal(true);\r\n\t\tsetwidgetName(widget_title);\r\n\t\tsetWidgettittle(widget_name);\r\n\t\tgetDeviceDataset();\r\n\t};\r\n\tconst tittleFocus = (event) => {\r\n\t\tevent.target.select();\r\n\t};\r\n\r\n\tconst CreateWidget = async (e) => {\r\n\t\te.dashboard_id =\r\n\t\t\tdashboardList.getUserDashboardNames[active_tab].dashboard_id;\r\n\t\te.widget_name = Widgettittle;\r\n\t\te.device_id = selected_device.value;\r\n\r\n\t\tif (e.widget_name === 'SensorPower') {\r\n\t\t\te.component_id = sensorSelected.value;\r\n\t\t} else {\r\n\t\t\te.component_id = selecteddataset.value;\r\n\t\t\te.rule_id = rules.value;\r\n\t\t}\r\n\t\t//\tconsole.log(e);\r\n\t\ttry {\r\n\t\t\tawait Savedashboarduser({ variables: { input: e } });\r\n\t\t} catch (err) {\r\n\t\t\t//console.log(err);\r\n\t\t\tsetshowCreatewidgetModal(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst closeCreateWidgetModal = () => {\r\n\t\tsetshowCreatewidgetModal(false);\r\n\t};\r\n\r\n\t// ----------------------------------------------- widget actions -------------------\r\n\r\n\tconst CreateDashoard = async (e) => {\r\n\t\tsetcircleloading(true);\r\n\t\tsetdisabled(true);\r\n\t\tsetdashboardNameEdit(e.dashboard_name);\r\n\t\tif (createDash === 'create') {\r\n\t\t\ttry {\r\n\t\t\t\tawait createDashboardNameGql({\r\n\t\t\t\t\tvariables: { dashboard_name: e.dashboard_name },\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\t//console.log(error);\r\n\t\t\t\tsetcircleloading(false);\r\n\t\t\t\tsetdisabled(false);\r\n\t\t\t\tsetdashboard_modal(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet dId = dashboardList.getUserDashboardNames[active_tab].dashboard_id;\r\n\t\t\ttry {\r\n\t\t\t\tawait editDashboardGqlFun({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tdashboard_id: dId,\r\n\t\t\t\t\t\tnew_name: e.dashboard_name,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetcircleloading(false);\r\n\t\t\t\tsetdisabled(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst Delete_widget = async (dta) => {\r\n\t\tsetmodaldata(modalDelete.DELETE_MODAL);\r\n\t\tsetWIdgetDeletedata(widgetActionData);\r\n\t\tsetshowModalDelete(true);\r\n\t};\r\n\r\n\t//Edit widget ------------------\r\n\tconst EditWidget = () => {\r\n\t\tsetshowEditDetailsModal(true);\r\n\t\tseteditmodaldata(widgetActionData);\r\n\t};\r\n\tconst closeEditModal = () => {\r\n\t\tsetshowEditDetailsModal(false);\r\n\t};\r\n\r\n\tconst EditWidgetFunc = async (e) => {\r\n\t\te.dashboard_id =\r\n\t\t\tdashboardList.getUserDashboardNames[active_tab]?.dashboard_id;\r\n\t\te.device_id = parseInt(e.device_id);\r\n\t\te.rule_id = parseInt(e.rule_id);\r\n\t\te.widget_id = parseInt(e.widget_id);\r\n\t\te.component_id = parseInt(e.component_id);\r\n\r\n\t\ttry {\r\n\t\t\tawait editWidget({ variables: { input: e } });\r\n\t\t\tsetshowEditDetailsModal(false);\r\n\t\t} catch (err) {\r\n\t\t\tsetshowEditDetailsModal(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst AllOnclick_event = async (buttonAction, ind, widgetActionData) => {\r\n\t\tsetindexDelete(ind);\r\n\r\n\t\tsetcircleloading(true);\r\n\t\tsetdisabled(true);\r\n\t\tlet dId = dashboardList.getUserDashboardNames[active_tab].dashboard_id;\r\n\t\tif (buttonAction === 'Delete_dashboard') {\r\n\t\t\ttry {\r\n\t\t\t\tawait DeleteDashboard({\r\n\t\t\t\t\tvariables: { dashboard_id: parseInt(dId) },\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetcircleloading(false);\r\n\t\t\t\tsetdisabled(false);\r\n\t\t\t\tsetshowModalDelete(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (buttonAction === 'Delete_widget') {\r\n\t\t\ttry {\r\n\t\t\t\tawait DeleteWidget({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tdashboard_id:\r\n\t\t\t\t\t\t\tdashboardList.getUserDashboardNames[active_tab].dashboard_id,\r\n\t\t\t\t\t\twidget_id: WIdgetDeletedata.widget_id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetcircleloading(false);\r\n\t\t\t\tsetdisabled(false);\r\n\t\t\t\tsetshowModalDelete(false);\r\n\t\t\t}\r\n\t\t} else if ((buttonAction = 'Cancel')) {\r\n\t\t\tsetshowModalDelete(false);\r\n\t\t\tsetcircleloading(false);\r\n\t\t\tsetdisabled(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onchangeDeviceFun = (e) => {\r\n\t\tsetselected_device(e);\r\n\t\tlet arrDataset = [];\r\n\t\tlet arrrules = [];\r\n\t\tdeviceData.get_device_dataset_name.map((li) => {\r\n\t\t\tif (li.device_name === e.label) {\r\n\t\t\t\tif (li.device_dataset.length > 0) {\r\n\t\t\t\t\tsetselecteddataset({\r\n\t\t\t\t\t\tvalue: li.device_dataset[0].component_id,\r\n\t\t\t\t\t\tlabel: li.device_dataset[0].dataset_name,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tli.device_dataset.map((l) => {\r\n\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\tvalue: l.component_id,\r\n\t\t\t\t\t\t\tlabel: l.dataset_name,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tarrDataset.push(d);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetallDataSets(arrDataset);\r\n\t\t\t\t\tsetsensorData(arrDataset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetselecteddataset('');\r\n\t\t\t\t\tsetallDataSets();\r\n\t\t\t\t\tsetsensorData();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (li.dev_component_names.length > 0) {\r\n\t\t\t\t\tsetsensorSelected({\r\n\t\t\t\t\t\tvalue: li.dev_component_names[0].component_id,\r\n\t\t\t\t\t\tlabel: li.dev_component_names[0].component_name,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet sensorArr = [];\r\n\t\t\t\t\tli.dev_component_names.map((s) => {\r\n\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\tvalue: s.component_id,\r\n\t\t\t\t\t\t\tlabel: s.component_name,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsensorArr.push(d);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetsensorData(sensorArr);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetsensorSelected('');\r\n\t\t\t\t\tsetsensorData();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (li.device_dataset[0]?.rules.length > 0) {\r\n\t\t\t\t\tsetrules({\r\n\t\t\t\t\t\tvalue: li.device_dataset[0].rules[0].rule_id,\r\n\t\t\t\t\t\tlabel: li.device_dataset[0].rules[0].rule_name,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tli.device_dataset[0].rules.map((li) => {\r\n\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\tvalue: li.rule_id,\r\n\t\t\t\t\t\t\tlabel: li.rule_name,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tarrrules.push(d);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetallRules(arrrules);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetrules('');\r\n\t\t\t\t\tsetallRules();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst onchangeDatasetFun = (d) => {\r\n\t\tif (d) {\r\n\t\t\tsetselecteddataset(d);\r\n\t\t\tlet rulesArr = [];\r\n\t\t\tdeviceData.get_device_dataset_name.map((li) => {\r\n\t\t\t\tif (li.device_name === selected_device.label) {\r\n\t\t\t\t\tli.device_dataset.map((l) => {\r\n\t\t\t\t\t\tif (l.component_id === d.value) {\r\n\t\t\t\t\t\t\tif (l.rules.length > 0) {\r\n\t\t\t\t\t\t\t\tsetrules({\r\n\t\t\t\t\t\t\t\t\tvalue: l.rules[0].rule_id,\r\n\t\t\t\t\t\t\t\t\tlabel: l.rules[0].rule_name,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tl.rules.map((r) => {\r\n\t\t\t\t\t\t\t\t\tlet d = {\r\n\t\t\t\t\t\t\t\t\t\tvalue: r.rule_id,\r\n\t\t\t\t\t\t\t\t\t\tlabel: r.rule_name,\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\trulesArr.push(d);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tsetallRules(rulesArr);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetrules('');\r\n\t\t\t\t\t\t\t\tsetallRules();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst onchangeRules = (d) => {\r\n\t\tif (d) {\r\n\t\t\tsetrules(d);\r\n\t\t}\r\n\t};\r\n\tconst onChangeSenorData = (d) => {\r\n\t\tsetsensorSelected(d);\r\n\t};\r\n\r\n\tif (loadingdashboard) {\r\n\t\t// return <div class=\"loading-container\">\r\n\t\t// \t<div class=\"loading\"></div>\r\n\t\t// \t<div id=\"loading-text\" className=\"text-primary font-weight-bolder\">loading</div>\r\n\t\t// </div>;\r\n\t\treturn <Loaders />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ModalDash\r\n\t\t\t\tshow={dashboard_modal}\r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\tCreateDashoard={CreateDashoard}\r\n\t\t\t\teditDashboard={editDashboard}\r\n\t\t\t\tcreateDash={createDash}\r\n\t\t\t\tcircleloading={circleloading}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t/>\r\n\r\n\t\t\t<DeleteModal\r\n\t\t\t\tDelete_data={modaldata}\r\n\t\t\t\tshow={showModalDelete}\r\n\t\t\t\thandleClose={handleCloseDeleteModal}\r\n\t\t\t\tAllOnclick_event={AllOnclick_event}\r\n\t\t\t\tindexIdDelete={indexIdDelete}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tcircleloading={circleloading}\r\n\t\t\t/>\r\n\r\n\t\t\t<Overlay\r\n\t\t\t\tshow={set_popover}\r\n\t\t\t\ttarget={target}\r\n\t\t\t\trootClose\r\n\t\t\t\tonHide={() => set_popover_disabled()}\r\n\t\t\t\tplacement=\"bottom\">\r\n\t\t\t\t<Popover id=\"popover_option_click\">\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"fs-7 px-3 py-1 popoverElements\"\r\n\t\t\t\t\t\t\tonClick={editDashboardNameFun}>\r\n\t\t\t\t\t\t\tEdit Tittle\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"fs-7 px-3 py-1 popoverElements\"\r\n\t\t\t\t\t\t\tonClick={deleteDashboard}>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Popover>\r\n\t\t\t</Overlay>\r\n\r\n\t\t\t{dashboardList.getUserDashboardNames.length > 0 && (\r\n\t\t\t\t<div className=\"dashboard_menu_container\">\r\n\t\t\t\t\t<div className=\"text-white fs-1 mb-4 mt-5 mt-lg-4 ml-4\">\r\n\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t{dashboardList.getUserDashboardNames.map((li, index) => (\r\n\t\t\t\t\t\t\t<div className=\"flex-containerbox\" key={index}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tindex === activeDashboard ? 'tab-active row' : 'tab row'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonClick={() => dashboardClick(li, index)}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"fs-4\" key={li.dashboard_name}>\r\n\t\t\t\t\t\t\t\t\t\t{li.dashboard_name}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tindex === activeDashboard\r\n\t\t\t\t\t\t\t\t\t\t\t\t? 'ri-more-2-line ri-lg icon_topbar text-white'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 'ri-more-2-line ri-lg icon_topbar'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => Dashboard_action(e, li, index)}></i>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{dashboardList.getUserDashboardNames.length < 5 && (\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tclassName=\"ri-add-line plus_icon fs-2\"\r\n\t\t\t\t\t\t\t\tonClick={() => CreateDashoard_modal('create')}></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{dashboardList.getUserDashboardNames.length <= 0 && (\r\n\t\t\t\t<Empty create_dashboard={CreateDashoard_modal} />\r\n\t\t\t)}\r\n\t\t\t{dashboardList.getUserDashboardNames.length > 0 && (\r\n\t\t\t\t<div className=\"row mt-lg-0 mt-5\">\r\n\t\t\t\t\t<div className=\"col-11 col-sm-11 col-md-11 col-lg-11 col-xl-11 widget_container\">\r\n\t\t\t\t\t\t<Widgets\r\n\t\t\t\t\t\t\tloadingInitialChart={loadingInitialChart}\r\n\t\t\t\t\t\t\tinitialChartData={\r\n\t\t\t\t\t\t\t\tinitialChartData && initialChartData.getUserDashboardWidgetInfo\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tactiveDashboard={activeDashboard}\r\n\t\t\t\t\t\t\tdashboardId={\r\n\t\t\t\t\t\t\t\tdashboardList.getUserDashboardNames[active_tab]?.dashboard_id\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tactive_tab={parseInt(activeDashboard) || 0}\r\n\t\t\t\t\t\t\teditWidget={editWidget}\r\n\t\t\t\t\t\t\tloadingEdit={loadingEdit}\r\n\t\t\t\t\t\t\tindexIdDelet={indexIdDelete}\r\n\t\t\t\t\t\t\tcircleloading={circleloading}\r\n\t\t\t\t\t\t\twidgetActionFun={widgetActionFun}\r\n\t\t\t\t\t\t\tsetPopoverWidget={setPopoverWidget}\r\n\t\t\t\t\t\t\tsetsetPopoverWidget={setsetPopoverWidget}\r\n\t\t\t\t\t\t\ttarget={target}\r\n\t\t\t\t\t\t\tviewDetailsData={viewDetailsData}\r\n\t\t\t\t\t\t\tmodalViewDetails={modalViewDetails}\r\n\t\t\t\t\t\t\tViewDetails={ViewDetails}\r\n\t\t\t\t\t\t\tcloseDetailsModal={closeDetailsModal}\r\n\t\t\t\t\t\t\tshowEditDetailsModal={showEditDetailsModal}\r\n\t\t\t\t\t\t\teditmodaldata={editmodaldata}\r\n\t\t\t\t\t\t\tcloseEditModal={closeEditModal}\r\n\t\t\t\t\t\t\tEditWidgetFunc={EditWidgetFunc}\r\n\t\t\t\t\t\t\tEditWidget={EditWidget}\r\n\t\t\t\t\t\t\tDelete_widget={Delete_widget}\r\n\t\t\t\t\t\t\tupdateComponents={updateComponents}\r\n\t\t\t\t\t\t\tshowDataOninterval={showDataOninterval}\r\n\t\t\t\t\t\t\tdataSdataSensorPowerSubs={dataSdataSensorPowerSubs}\r\n\t\t\t\t\t\t\terrorSensorPowerSubs={errorSensorPowerSubs}\r\n\t\t\t\t\t\t\tChartSubsData={ChartSubsData}\r\n\t\t\t\t\t\t\tchartSubsError={chartSubsError}\r\n\t\t\t\t\t\t\tWidgettittle={Widgettittle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{initialChartData?.getUserDashboardWidgetInfo.length >= 0 &&\r\n\t\t\t\t\t\tinitialChartData?.getUserDashboardWidgetInfo.length < 10 && (\r\n\t\t\t\t\t\t\t<div className=\"col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1\">\r\n\t\t\t\t\t\t\t\t<GridLayout\r\n\t\t\t\t\t\t\t\t\tclassName=\"layout\"\r\n\t\t\t\t\t\t\t\t\tlayout={layoutRightBAr}\r\n\t\t\t\t\t\t\t\t\tisResizable={false}\r\n\t\t\t\t\t\t\t\t\tcols={2}\r\n\t\t\t\t\t\t\t\t\trowHeight={200}>\r\n\t\t\t\t\t\t\t\t\t{layoutRightBAr.map((li) => (\r\n\t\t\t\t\t\t\t\t\t\t<div key={li.i}>\r\n\t\t\t\t\t\t\t\t\t\t\t<RightBar createWidget={createWidget} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</GridLayout>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showCreatewidgetModal}\r\n\t\t\t\tdialogClassName=\"save_chart_modal_class\"\r\n\t\t\t\tonHide={closeCreateWidgetModal}\r\n\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\tkeyboard={true}>\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<span className=\"modal_header \">{`${widgetName} widget`}</span>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"ri-close-line ri-lg ml-auto fs-4\"\r\n\t\t\t\t\t\tonClick={closeCreateWidgetModal}></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={handleSubmit(CreateWidget)}>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"widget_title\">\r\n\t\t\t\t\t\t\t\tTittle\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"widget_title\"\r\n\t\t\t\t\t\t\t\tid=\"widget_title\"\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\terrors.widget_title\r\n\t\t\t\t\t\t\t\t\t\t? 'form-control error_input'\r\n\t\t\t\t\t\t\t\t\t\t: 'form-control'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Tittle\"\r\n\t\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\t\trequired: 'Tittle is required',\r\n\t\t\t\t\t\t\t\t\tmaxLength: 28,\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\tonFocus={tittleFocus}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{errors.widget_title && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\t{errors.widget_title.message}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{errors.widget_title && errors.widget_title.type === 'maxLength' && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\tMax length of title exceeded{' '}\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-info\">(28)</span>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"group_name\">\r\n\t\t\t\t\t\t\t\tSelect Device\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tvalue={selected_device}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onchangeDeviceFun(e)}\r\n\t\t\t\t\t\t\t\toptions={allDevices}\r\n\t\t\t\t\t\t\t\tplaceholder={'Select device'}\r\n\t\t\t\t\t\t\t\tisDisabled={loadingDevice}\r\n\t\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{loadingDevice && (\r\n\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right loaderOnInput\"></span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{errors.device_id && (\r\n\t\t\t\t\t\t\t\t<div className=\"text-error\">{errors.device_id.message}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{widgetName !== 'Sensor power' && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"group_name\">\r\n\t\t\t\t\t\t\t\t\t\tSelect Dataset\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={selecteddataset}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onchangeDatasetFun(e)}\r\n\t\t\t\t\t\t\t\t\t\t\toptions={allDataSets}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Select dataset'}\r\n\t\t\t\t\t\t\t\t\t\t\tisDisabled={loadingDevice}\r\n\t\t\t\t\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{loadingDevice && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right loaderOnInput\"></span>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{errors.device_dataset && (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.device_dataset.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t\t\t\t\t<label className=\"label\" htmlFor=\"group_name\">\r\n\t\t\t\t\t\t\t\t\t\tSelect rule\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={rules}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onchangeRules(e)}\r\n\t\t\t\t\t\t\t\t\t\t\toptions={allRules}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Select rule'}\r\n\t\t\t\t\t\t\t\t\t\t\tisDisabled={loadingDevice}\r\n\t\t\t\t\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{loadingDevice && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right loaderOnInput\"></span>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{errors.device_dataset && (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-error\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.device_dataset.message}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{widgetName === 'Sensor power' && (\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"\">Select Device Component</div>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tvalue={sensorSelected}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onChangeSenorData(e)}\r\n\t\t\t\t\t\t\t\t\t\toptions={sensorData}\r\n\t\t\t\t\t\t\t\t\t\tisDisabled={loadingDevice}\r\n\t\t\t\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{loadingDevice && (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right loaderOnInput\"></span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mt-3\" align=\"right\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary mr-2\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tonClick={closeCreateWidgetModal}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{widgetName === 'Sensor power' && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\tsensorSelected === '' ||\r\n\t\t\t\t\t\t\t\t\tsensorSelected === undefined ||\r\n\t\t\t\t\t\t\t\t\tsensorSelected === null ||\r\n\t\t\t\t\t\t\t\t\tselected_device === null ||\r\n\t\t\t\t\t\t\t\t\tselected_device === undefined ||\r\n\t\t\t\t\t\t\t\t\tselected_device === ''\r\n\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t: updateWidgetLoading\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t{updateWidgetLoading === true && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right mt-3\"></span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{widgetName !== 'Sensor power' && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\trules === null ||\r\n\t\t\t\t\t\t\t\t\trules === undefined ||\r\n\t\t\t\t\t\t\t\t\trules === '' ||\r\n\t\t\t\t\t\t\t\t\tselected_device === undefined ||\r\n\t\t\t\t\t\t\t\t\tselected_device === null ||\r\n\t\t\t\t\t\t\t\t\tselected_device === '' ||\r\n\t\t\t\t\t\t\t\t\tselecteddataset === undefined ||\r\n\t\t\t\t\t\t\t\t\tselecteddataset === null ||\r\n\t\t\t\t\t\t\t\t\tselecteddataset === ''\r\n\t\t\t\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t\t\t\t: updateWidgetLoading\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t{updateWidgetLoading === true && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"spinner-border float-right mt-3\"></span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DashboardBar;\r\n","D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Files\\DeleteData.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Context\\loadingContextSensorpower.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Dashboard\\testDashvbooard.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\View\\Others\\DocumentSite.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\Components\\Loader\\Loader.js",[],"D:\\Work\\Wiznet_projects\\winc_solution\\wink-iot-dashboard-dev\\src\\d3\\Charts\\BarChart\\testBar.js",["260","261","262","263"],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":7,"column":19,"nodeType":"270","messageId":"271","endLine":7,"endColumn":23},{"ruleId":"268","severity":1,"message":"272","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":24},{"ruleId":"268","severity":1,"message":"273","line":9,"column":26,"nodeType":"270","messageId":"271","endLine":9,"endColumn":33},{"ruleId":"268","severity":1,"message":"274","line":17,"column":9,"nodeType":"270","messageId":"271","endLine":17,"endColumn":19},{"ruleId":"268","severity":1,"message":"275","line":14,"column":8,"nodeType":"270","messageId":"271","endLine":14,"endColumn":14},{"ruleId":"268","severity":1,"message":"276","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":25},{"ruleId":"268","severity":1,"message":"277","line":3,"column":27,"nodeType":"270","messageId":"271","endLine":3,"endColumn":40},{"ruleId":"268","severity":1,"message":"278","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":18},{"ruleId":"268","severity":1,"message":"279","line":6,"column":28,"nodeType":"270","messageId":"271","endLine":6,"endColumn":33},{"ruleId":"268","severity":1,"message":"280","line":12,"column":10,"nodeType":"270","messageId":"271","endLine":12,"endColumn":16},{"ruleId":"268","severity":1,"message":"281","line":15,"column":8,"nodeType":"270","messageId":"271","endLine":15,"endColumn":16},{"ruleId":"268","severity":1,"message":"282","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"283","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"284","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":17},{"ruleId":"268","severity":1,"message":"285","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":21},{"ruleId":"268","severity":1,"message":"286","line":3,"column":23,"nodeType":"270","messageId":"271","endLine":3,"endColumn":38},{"ruleId":"268","severity":1,"message":"287","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":26},{"ruleId":"268","severity":1,"message":"288","line":4,"column":28,"nodeType":"270","messageId":"271","endLine":4,"endColumn":43},{"ruleId":"268","severity":1,"message":"289","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":23},{"ruleId":"268","severity":1,"message":"290","line":5,"column":25,"nodeType":"270","messageId":"271","endLine":5,"endColumn":41},{"ruleId":"268","severity":1,"message":"291","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":20},{"ruleId":"268","severity":1,"message":"292","line":7,"column":10,"nodeType":"270","messageId":"271","endLine":7,"endColumn":17},{"ruleId":"268","severity":1,"message":"293","line":7,"column":19,"nodeType":"270","messageId":"271","endLine":7,"endColumn":26},{"ruleId":"294","severity":1,"message":"295","line":427,"column":25,"nodeType":"296","messageId":"297","endLine":427,"endColumn":27},{"ruleId":"264","replacedBy":"298"},{"ruleId":"266","replacedBy":"299"},{"ruleId":"268","severity":1,"message":"275","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":14},{"ruleId":"264","replacedBy":"300"},{"ruleId":"266","replacedBy":"301"},{"ruleId":"268","severity":1,"message":"275","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":14},{"ruleId":"268","severity":1,"message":"282","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"283","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"302","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":24},{"ruleId":"268","severity":1,"message":"275","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":14},{"ruleId":"268","severity":1,"message":"303","line":75,"column":10,"nodeType":"270","messageId":"271","endLine":75,"endColumn":18},{"ruleId":"268","severity":1,"message":"304","line":102,"column":9,"nodeType":"270","messageId":"271","endLine":102,"endColumn":22},{"ruleId":"268","severity":1,"message":"305","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":30},{"ruleId":"306","severity":2,"message":"307","line":153,"column":21,"nodeType":"270","messageId":"308","endLine":153,"endColumn":32},{"ruleId":"306","severity":2,"message":"309","line":154,"column":21,"nodeType":"270","messageId":"308","endLine":154,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":161,"column":5,"nodeType":"312","endLine":161,"endColumn":26,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'hover_icon' is assigned a value but never used.","'Loader' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'GridLayout' is defined but never used.","'Modal' is defined but never used.","'Charts' is defined but never used.","'TestComp' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useForm' is defined but never used.","'useMutation' is defined but never used.","'useSubscription' is defined but never used.","'UPDATECOMPONENTS' is defined but never used.","'DELETECOMPONENT' is defined but never used.","'DASHBOARDDATA' is defined but never used.","'GETDEVICEDATASET' is defined but never used.","'D2CMESSAGE' is defined but never used.","'Popover' is defined but never used.","'Overlay' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["314"],["315"],["314"],["315"],"'chartDataValue' is defined but never used.","'widgetId' is assigned a value but never used.","'showdashboard' is assigned a value but never used.","'renderToStaticMarkup' is defined but never used.","no-undef","'showTooltip' is not defined.","undef","'moveTooltip' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'draw' and 'ref'. Either include them or remove the dependency array. Outer scope values like 'data' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["316"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},"Update the dependencies array to be: [width, height, draw, ref]",{"range":"319","text":"320"},[4867,4888],"[width, height, draw, ref]"]